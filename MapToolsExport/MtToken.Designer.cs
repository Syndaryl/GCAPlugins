//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GCA.MapToolsExport {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    //[global::System.Serializable()]
    //[global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    //[global::System.Xml.Serialization.XmlRootAttribute("NewDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewDataSet : global::System.Data.DataSet {
        
        private entryDataTable tableentry;
        
        private _net_rptools_lib_MD5KeyDataTable table_net_rptools_lib_MD5Key;
        
        private _net_rptools_maptool_model_GUIDDataTable table_net_rptools_maptool_model_GUID;
        
        private _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable table_net_rptools_CaseInsensitiveHashMap__KeyValue;
        
        private valueDataTable tablevalue;
        
        private _outer_classDataTable table_outer_class;
        
        private _net_rptools_maptool_model_MacroButtonPropertiesDataTable table_net_rptools_maptool_model_MacroButtonProperties;
        
        private _net_rptools_maptool_model_TokenDataTable table_net_rptools_maptool_model_Token;
        
        private idDataTable tableid;
        
        private exposedAreaGUIDDataTable tableexposedAreaGUID;
        
        private imageAssetMapDataTable tableimageAssetMap;
        
        private sizeMapDataTable tablesizeMap;
        
        private ownerListDataTable tableownerList;
        
        private portraitImageDataTable tableportraitImage;
        
        private stateDataTable tablestate;
        
        private propertyMapCIDataTable tablepropertyMapCI;
        
        private storeDataTable tablestore;
        
        private macroPropertiesMapDataTable tablemacroPropertiesMap;
        
        private global::System.Data.DataRelation relationimageAssetMap_entry;
        
        private global::System.Data.DataRelation relationsizeMap_entry;
        
        private global::System.Data.DataRelation relationstate_entry;
        
        private global::System.Data.DataRelation relationstore_entry;
        
        private global::System.Data.DataRelation relationmacroPropertiesMap_entry;
        
        private global::System.Data.DataRelation _relationentry_net_rptools_lib_MD5Key;
        
        private global::System.Data.DataRelation _relationentry_net_rptools_maptool_model_GUID;
        
        private global::System.Data.DataRelation _relationentry_net_rptools_CaseInsensitiveHashMap__KeyValue;
        
        private global::System.Data.DataRelation _relationnet_rptools_CaseInsensitiveHashMap__KeyValue_value;
        
        private global::System.Data.DataRelation _relationnet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class;
        
        private global::System.Data.DataRelation _relationentry_net_rptools_maptool_model_MacroButtonProperties;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_id;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_exposedAreaGUID;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_imageAssetMap;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_sizeMap;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_ownerList;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_portraitImage;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_state;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_propertyMapCI;
        
        private global::System.Data.DataRelation relationpropertyMapCI_store;
        
        private global::System.Data.DataRelation _relationnet_rptools_maptool_model_Token_macroPropertiesMap;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NewDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["entry"] != null)) {
                    base.Tables.Add(new entryDataTable(ds.Tables["entry"]));
                }
                if ((ds.Tables["net.rptools.lib.MD5Key"] != null)) {
                    base.Tables.Add(new _net_rptools_lib_MD5KeyDataTable(ds.Tables["net.rptools.lib.MD5Key"]));
                }
                if ((ds.Tables["net.rptools.maptool.model.GUID"] != null)) {
                    base.Tables.Add(new _net_rptools_maptool_model_GUIDDataTable(ds.Tables["net.rptools.maptool.model.GUID"]));
                }
                if ((ds.Tables["net.rptools.CaseInsensitiveHashMap_-KeyValue"] != null)) {
                    base.Tables.Add(new _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable(ds.Tables["net.rptools.CaseInsensitiveHashMap_-KeyValue"]));
                }
                if ((ds.Tables["value"] != null)) {
                    base.Tables.Add(new valueDataTable(ds.Tables["value"]));
                }
                if ((ds.Tables["outer-class"] != null)) {
                    base.Tables.Add(new _outer_classDataTable(ds.Tables["outer-class"]));
                }
                if ((ds.Tables["net.rptools.maptool.model.MacroButtonProperties"] != null)) {
                    base.Tables.Add(new _net_rptools_maptool_model_MacroButtonPropertiesDataTable(ds.Tables["net.rptools.maptool.model.MacroButtonProperties"]));
                }
                if ((ds.Tables["net.rptools.maptool.model.Token"] != null)) {
                    base.Tables.Add(new _net_rptools_maptool_model_TokenDataTable(ds.Tables["net.rptools.maptool.model.Token"]));
                }
                if ((ds.Tables["id"] != null)) {
                    base.Tables.Add(new idDataTable(ds.Tables["id"]));
                }
                if ((ds.Tables["exposedAreaGUID"] != null)) {
                    base.Tables.Add(new exposedAreaGUIDDataTable(ds.Tables["exposedAreaGUID"]));
                }
                if ((ds.Tables["imageAssetMap"] != null)) {
                    base.Tables.Add(new imageAssetMapDataTable(ds.Tables["imageAssetMap"]));
                }
                if ((ds.Tables["sizeMap"] != null)) {
                    base.Tables.Add(new sizeMapDataTable(ds.Tables["sizeMap"]));
                }
                if ((ds.Tables["ownerList"] != null)) {
                    base.Tables.Add(new ownerListDataTable(ds.Tables["ownerList"]));
                }
                if ((ds.Tables["portraitImage"] != null)) {
                    base.Tables.Add(new portraitImageDataTable(ds.Tables["portraitImage"]));
                }
                if ((ds.Tables["state"] != null)) {
                    base.Tables.Add(new stateDataTable(ds.Tables["state"]));
                }
                if ((ds.Tables["propertyMapCI"] != null)) {
                    base.Tables.Add(new propertyMapCIDataTable(ds.Tables["propertyMapCI"]));
                }
                if ((ds.Tables["store"] != null)) {
                    base.Tables.Add(new storeDataTable(ds.Tables["store"]));
                }
                if ((ds.Tables["macroPropertiesMap"] != null)) {
                    base.Tables.Add(new macroPropertiesMapDataTable(ds.Tables["macroPropertiesMap"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public entryDataTable entry {
            get {
                return this.tableentry;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _net_rptools_lib_MD5KeyDataTable _net_rptools_lib_MD5Key {
            get {
                return this.table_net_rptools_lib_MD5Key;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _net_rptools_maptool_model_GUIDDataTable _net_rptools_maptool_model_GUID {
            get {
                return this.table_net_rptools_maptool_model_GUID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable _net_rptools_CaseInsensitiveHashMap__KeyValue {
            get {
                return this.table_net_rptools_CaseInsensitiveHashMap__KeyValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public valueDataTable value {
            get {
                return this.tablevalue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _outer_classDataTable _outer_class {
            get {
                return this.table_outer_class;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _net_rptools_maptool_model_MacroButtonPropertiesDataTable _net_rptools_maptool_model_MacroButtonProperties {
            get {
                return this.table_net_rptools_maptool_model_MacroButtonProperties;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _net_rptools_maptool_model_TokenDataTable _net_rptools_maptool_model_Token {
            get {
                return this.table_net_rptools_maptool_model_Token;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public idDataTable id {
            get {
                return this.tableid;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public exposedAreaGUIDDataTable exposedAreaGUID {
            get {
                return this.tableexposedAreaGUID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public imageAssetMapDataTable imageAssetMap {
            get {
                return this.tableimageAssetMap;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sizeMapDataTable sizeMap {
            get {
                return this.tablesizeMap;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ownerListDataTable ownerList {
            get {
                return this.tableownerList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public portraitImageDataTable portraitImage {
            get {
                return this.tableportraitImage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stateDataTable state {
            get {
                return this.tablestate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public propertyMapCIDataTable propertyMapCI {
            get {
                return this.tablepropertyMapCI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public storeDataTable store {
            get {
                return this.tablestore;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public macroPropertiesMapDataTable macroPropertiesMap {
            get {
                return this.tablemacroPropertiesMap;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NewDataSet cln = ((NewDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["entry"] != null)) {
                    base.Tables.Add(new entryDataTable(ds.Tables["entry"]));
                }
                if ((ds.Tables["net.rptools.lib.MD5Key"] != null)) {
                    base.Tables.Add(new _net_rptools_lib_MD5KeyDataTable(ds.Tables["net.rptools.lib.MD5Key"]));
                }
                if ((ds.Tables["net.rptools.maptool.model.GUID"] != null)) {
                    base.Tables.Add(new _net_rptools_maptool_model_GUIDDataTable(ds.Tables["net.rptools.maptool.model.GUID"]));
                }
                if ((ds.Tables["net.rptools.CaseInsensitiveHashMap_-KeyValue"] != null)) {
                    base.Tables.Add(new _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable(ds.Tables["net.rptools.CaseInsensitiveHashMap_-KeyValue"]));
                }
                if ((ds.Tables["value"] != null)) {
                    base.Tables.Add(new valueDataTable(ds.Tables["value"]));
                }
                if ((ds.Tables["outer-class"] != null)) {
                    base.Tables.Add(new _outer_classDataTable(ds.Tables["outer-class"]));
                }
                if ((ds.Tables["net.rptools.maptool.model.MacroButtonProperties"] != null)) {
                    base.Tables.Add(new _net_rptools_maptool_model_MacroButtonPropertiesDataTable(ds.Tables["net.rptools.maptool.model.MacroButtonProperties"]));
                }
                if ((ds.Tables["net.rptools.maptool.model.Token"] != null)) {
                    base.Tables.Add(new _net_rptools_maptool_model_TokenDataTable(ds.Tables["net.rptools.maptool.model.Token"]));
                }
                if ((ds.Tables["id"] != null)) {
                    base.Tables.Add(new idDataTable(ds.Tables["id"]));
                }
                if ((ds.Tables["exposedAreaGUID"] != null)) {
                    base.Tables.Add(new exposedAreaGUIDDataTable(ds.Tables["exposedAreaGUID"]));
                }
                if ((ds.Tables["imageAssetMap"] != null)) {
                    base.Tables.Add(new imageAssetMapDataTable(ds.Tables["imageAssetMap"]));
                }
                if ((ds.Tables["sizeMap"] != null)) {
                    base.Tables.Add(new sizeMapDataTable(ds.Tables["sizeMap"]));
                }
                if ((ds.Tables["ownerList"] != null)) {
                    base.Tables.Add(new ownerListDataTable(ds.Tables["ownerList"]));
                }
                if ((ds.Tables["portraitImage"] != null)) {
                    base.Tables.Add(new portraitImageDataTable(ds.Tables["portraitImage"]));
                }
                if ((ds.Tables["state"] != null)) {
                    base.Tables.Add(new stateDataTable(ds.Tables["state"]));
                }
                if ((ds.Tables["propertyMapCI"] != null)) {
                    base.Tables.Add(new propertyMapCIDataTable(ds.Tables["propertyMapCI"]));
                }
                if ((ds.Tables["store"] != null)) {
                    base.Tables.Add(new storeDataTable(ds.Tables["store"]));
                }
                if ((ds.Tables["macroPropertiesMap"] != null)) {
                    base.Tables.Add(new macroPropertiesMapDataTable(ds.Tables["macroPropertiesMap"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableentry = ((entryDataTable)(base.Tables["entry"]));
            if ((initTable == true)) {
                if ((this.tableentry != null)) {
                    this.tableentry.InitVars();
                }
            }
            this.table_net_rptools_lib_MD5Key = ((_net_rptools_lib_MD5KeyDataTable)(base.Tables["net.rptools.lib.MD5Key"]));
            if ((initTable == true)) {
                if ((this.table_net_rptools_lib_MD5Key != null)) {
                    this.table_net_rptools_lib_MD5Key.InitVars();
                }
            }
            this.table_net_rptools_maptool_model_GUID = ((_net_rptools_maptool_model_GUIDDataTable)(base.Tables["net.rptools.maptool.model.GUID"]));
            if ((initTable == true)) {
                if ((this.table_net_rptools_maptool_model_GUID != null)) {
                    this.table_net_rptools_maptool_model_GUID.InitVars();
                }
            }
            this.table_net_rptools_CaseInsensitiveHashMap__KeyValue = ((_net_rptools_CaseInsensitiveHashMap__KeyValueDataTable)(base.Tables["net.rptools.CaseInsensitiveHashMap_-KeyValue"]));
            if ((initTable == true)) {
                if ((this.table_net_rptools_CaseInsensitiveHashMap__KeyValue != null)) {
                    this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.InitVars();
                }
            }
            this.tablevalue = ((valueDataTable)(base.Tables["value"]));
            if ((initTable == true)) {
                if ((this.tablevalue != null)) {
                    this.tablevalue.InitVars();
                }
            }
            this.table_outer_class = ((_outer_classDataTable)(base.Tables["outer-class"]));
            if ((initTable == true)) {
                if ((this.table_outer_class != null)) {
                    this.table_outer_class.InitVars();
                }
            }
            this.table_net_rptools_maptool_model_MacroButtonProperties = ((_net_rptools_maptool_model_MacroButtonPropertiesDataTable)(base.Tables["net.rptools.maptool.model.MacroButtonProperties"]));
            if ((initTable == true)) {
                if ((this.table_net_rptools_maptool_model_MacroButtonProperties != null)) {
                    this.table_net_rptools_maptool_model_MacroButtonProperties.InitVars();
                }
            }
            this.table_net_rptools_maptool_model_Token = ((_net_rptools_maptool_model_TokenDataTable)(base.Tables["net.rptools.maptool.model.Token"]));
            if ((initTable == true)) {
                if ((this.table_net_rptools_maptool_model_Token != null)) {
                    this.table_net_rptools_maptool_model_Token.InitVars();
                }
            }
            this.tableid = ((idDataTable)(base.Tables["id"]));
            if ((initTable == true)) {
                if ((this.tableid != null)) {
                    this.tableid.InitVars();
                }
            }
            this.tableexposedAreaGUID = ((exposedAreaGUIDDataTable)(base.Tables["exposedAreaGUID"]));
            if ((initTable == true)) {
                if ((this.tableexposedAreaGUID != null)) {
                    this.tableexposedAreaGUID.InitVars();
                }
            }
            this.tableimageAssetMap = ((imageAssetMapDataTable)(base.Tables["imageAssetMap"]));
            if ((initTable == true)) {
                if ((this.tableimageAssetMap != null)) {
                    this.tableimageAssetMap.InitVars();
                }
            }
            this.tablesizeMap = ((sizeMapDataTable)(base.Tables["sizeMap"]));
            if ((initTable == true)) {
                if ((this.tablesizeMap != null)) {
                    this.tablesizeMap.InitVars();
                }
            }
            this.tableownerList = ((ownerListDataTable)(base.Tables["ownerList"]));
            if ((initTable == true)) {
                if ((this.tableownerList != null)) {
                    this.tableownerList.InitVars();
                }
            }
            this.tableportraitImage = ((portraitImageDataTable)(base.Tables["portraitImage"]));
            if ((initTable == true)) {
                if ((this.tableportraitImage != null)) {
                    this.tableportraitImage.InitVars();
                }
            }
            this.tablestate = ((stateDataTable)(base.Tables["state"]));
            if ((initTable == true)) {
                if ((this.tablestate != null)) {
                    this.tablestate.InitVars();
                }
            }
            this.tablepropertyMapCI = ((propertyMapCIDataTable)(base.Tables["propertyMapCI"]));
            if ((initTable == true)) {
                if ((this.tablepropertyMapCI != null)) {
                    this.tablepropertyMapCI.InitVars();
                }
            }
            this.tablestore = ((storeDataTable)(base.Tables["store"]));
            if ((initTable == true)) {
                if ((this.tablestore != null)) {
                    this.tablestore.InitVars();
                }
            }
            this.tablemacroPropertiesMap = ((macroPropertiesMapDataTable)(base.Tables["macroPropertiesMap"]));
            if ((initTable == true)) {
                if ((this.tablemacroPropertiesMap != null)) {
                    this.tablemacroPropertiesMap.InitVars();
                }
            }
            this.relationimageAssetMap_entry = this.Relations["imageAssetMap_entry"];
            this.relationsizeMap_entry = this.Relations["sizeMap_entry"];
            this.relationstate_entry = this.Relations["state_entry"];
            this.relationstore_entry = this.Relations["store_entry"];
            this.relationmacroPropertiesMap_entry = this.Relations["macroPropertiesMap_entry"];
            this._relationentry_net_rptools_lib_MD5Key = this.Relations["entry_net.rptools.lib.MD5Key"];
            this._relationentry_net_rptools_maptool_model_GUID = this.Relations["entry_net.rptools.maptool.model.GUID"];
            this._relationentry_net_rptools_CaseInsensitiveHashMap__KeyValue = this.Relations["entry_net.rptools.CaseInsensitiveHashMap_-KeyValue"];
            this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_value = this.Relations["net.rptools.CaseInsensitiveHashMap_-KeyValue_value"];
            this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class = this.Relations["net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class"];
            this._relationentry_net_rptools_maptool_model_MacroButtonProperties = this.Relations["entry_net.rptools.maptool.model.MacroButtonProperties"];
            this._relationnet_rptools_maptool_model_Token_id = this.Relations["net.rptools.maptool.model.Token_id"];
            this._relationnet_rptools_maptool_model_Token_exposedAreaGUID = this.Relations["net.rptools.maptool.model.Token_exposedAreaGUID"];
            this._relationnet_rptools_maptool_model_Token_imageAssetMap = this.Relations["net.rptools.maptool.model.Token_imageAssetMap"];
            this._relationnet_rptools_maptool_model_Token_sizeMap = this.Relations["net.rptools.maptool.model.Token_sizeMap"];
            this._relationnet_rptools_maptool_model_Token_ownerList = this.Relations["net.rptools.maptool.model.Token_ownerList"];
            this._relationnet_rptools_maptool_model_Token_portraitImage = this.Relations["net.rptools.maptool.model.Token_portraitImage"];
            this._relationnet_rptools_maptool_model_Token_state = this.Relations["net.rptools.maptool.model.Token_state"];
            this._relationnet_rptools_maptool_model_Token_propertyMapCI = this.Relations["net.rptools.maptool.model.Token_propertyMapCI"];
            this.relationpropertyMapCI_store = this.Relations["propertyMapCI_store"];
            this._relationnet_rptools_maptool_model_Token_macroPropertiesMap = this.Relations["net.rptools.maptool.model.Token_macroPropertiesMap"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NewDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableentry = new entryDataTable();
            base.Tables.Add(this.tableentry);
            this.table_net_rptools_lib_MD5Key = new _net_rptools_lib_MD5KeyDataTable();
            base.Tables.Add(this.table_net_rptools_lib_MD5Key);
            this.table_net_rptools_maptool_model_GUID = new _net_rptools_maptool_model_GUIDDataTable();
            base.Tables.Add(this.table_net_rptools_maptool_model_GUID);
            this.table_net_rptools_CaseInsensitiveHashMap__KeyValue = new _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable();
            base.Tables.Add(this.table_net_rptools_CaseInsensitiveHashMap__KeyValue);
            this.tablevalue = new valueDataTable();
            base.Tables.Add(this.tablevalue);
            this.table_outer_class = new _outer_classDataTable();
            base.Tables.Add(this.table_outer_class);
            this.table_net_rptools_maptool_model_MacroButtonProperties = new _net_rptools_maptool_model_MacroButtonPropertiesDataTable();
            base.Tables.Add(this.table_net_rptools_maptool_model_MacroButtonProperties);
            this.table_net_rptools_maptool_model_Token = new _net_rptools_maptool_model_TokenDataTable();
            base.Tables.Add(this.table_net_rptools_maptool_model_Token);
            this.tableid = new idDataTable();
            base.Tables.Add(this.tableid);
            this.tableexposedAreaGUID = new exposedAreaGUIDDataTable();
            base.Tables.Add(this.tableexposedAreaGUID);
            this.tableimageAssetMap = new imageAssetMapDataTable();
            base.Tables.Add(this.tableimageAssetMap);
            this.tablesizeMap = new sizeMapDataTable();
            base.Tables.Add(this.tablesizeMap);
            this.tableownerList = new ownerListDataTable();
            base.Tables.Add(this.tableownerList);
            this.tableportraitImage = new portraitImageDataTable();
            base.Tables.Add(this.tableportraitImage);
            this.tablestate = new stateDataTable();
            base.Tables.Add(this.tablestate);
            this.tablepropertyMapCI = new propertyMapCIDataTable();
            base.Tables.Add(this.tablepropertyMapCI);
            this.tablestore = new storeDataTable();
            base.Tables.Add(this.tablestore);
            this.tablemacroPropertiesMap = new macroPropertiesMapDataTable();
            base.Tables.Add(this.tablemacroPropertiesMap);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("imageAssetMap_entry", new global::System.Data.DataColumn[] {
                        this.tableimageAssetMap.imageAssetMap_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.imageAssetMap_IdColumn});
            this.tableentry.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sizeMap_entry", new global::System.Data.DataColumn[] {
                        this.tablesizeMap.sizeMap_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.sizeMap_IdColumn});
            this.tableentry.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("state_entry", new global::System.Data.DataColumn[] {
                        this.tablestate.state_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.state_IdColumn});
            this.tableentry.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("store_entry", new global::System.Data.DataColumn[] {
                        this.tablestore.store_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.store_IdColumn});
            this.tableentry.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("macroPropertiesMap_entry", new global::System.Data.DataColumn[] {
                        this.tablemacroPropertiesMap.macroPropertiesMap_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.macroPropertiesMap_IdColumn});
            this.tableentry.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("entry_net.rptools.lib.MD5Key", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_lib_MD5Key.entry_IdColumn});
            this.table_net_rptools_lib_MD5Key.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("entry_net.rptools.maptool.model.GUID", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_GUID.entry_IdColumn});
            this.table_net_rptools_maptool_model_GUID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("entry_net.rptools.CaseInsensitiveHashMap_-KeyValue", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.entry_IdColumn});
            this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.CaseInsensitiveHashMap_-KeyValue_value", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_CaseInsensitiveHashMap__KeyValue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablevalue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn});
            this.tablevalue.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_CaseInsensitiveHashMap__KeyValue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_outer_class._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn});
            this.table_outer_class.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("entry_net.rptools.maptool.model.MacroButtonProperties", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_MacroButtonProperties.entry_IdColumn});
            this.table_net_rptools_maptool_model_MacroButtonProperties.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_id", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableid._net_rptools_maptool_model_Token_IdColumn});
            this.tableid.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_exposedAreaGUID", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexposedAreaGUID._net_rptools_maptool_model_Token_IdColumn});
            this.tableexposedAreaGUID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_imageAssetMap", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableimageAssetMap._net_rptools_maptool_model_Token_IdColumn});
            this.tableimageAssetMap.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_sizeMap", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesizeMap._net_rptools_maptool_model_Token_IdColumn});
            this.tablesizeMap.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_ownerList", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableownerList._net_rptools_maptool_model_Token_IdColumn});
            this.tableownerList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_portraitImage", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableportraitImage._net_rptools_maptool_model_Token_IdColumn});
            this.tableportraitImage.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_state", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestate._net_rptools_maptool_model_Token_IdColumn});
            this.tablestate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_propertyMapCI", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablepropertyMapCI._net_rptools_maptool_model_Token_IdColumn});
            this.tablepropertyMapCI.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("propertyMapCI_store", new global::System.Data.DataColumn[] {
                        this.tablepropertyMapCI.propertyMapCI_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestore.propertyMapCI_IdColumn});
            this.tablestore.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("net.rptools.maptool.model.Token_macroPropertiesMap", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemacroPropertiesMap._net_rptools_maptool_model_Token_IdColumn});
            this.tablemacroPropertiesMap.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationimageAssetMap_entry = new global::System.Data.DataRelation("imageAssetMap_entry", new global::System.Data.DataColumn[] {
                        this.tableimageAssetMap.imageAssetMap_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.imageAssetMap_IdColumn}, false);
            this.relationimageAssetMap_entry.Nested = true;
            this.Relations.Add(this.relationimageAssetMap_entry);
            this.relationsizeMap_entry = new global::System.Data.DataRelation("sizeMap_entry", new global::System.Data.DataColumn[] {
                        this.tablesizeMap.sizeMap_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.sizeMap_IdColumn}, false);
            this.relationsizeMap_entry.Nested = true;
            this.Relations.Add(this.relationsizeMap_entry);
            this.relationstate_entry = new global::System.Data.DataRelation("state_entry", new global::System.Data.DataColumn[] {
                        this.tablestate.state_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.state_IdColumn}, false);
            this.relationstate_entry.Nested = true;
            this.Relations.Add(this.relationstate_entry);
            this.relationstore_entry = new global::System.Data.DataRelation("store_entry", new global::System.Data.DataColumn[] {
                        this.tablestore.store_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.store_IdColumn}, false);
            this.relationstore_entry.Nested = true;
            this.Relations.Add(this.relationstore_entry);
            this.relationmacroPropertiesMap_entry = new global::System.Data.DataRelation("macroPropertiesMap_entry", new global::System.Data.DataColumn[] {
                        this.tablemacroPropertiesMap.macroPropertiesMap_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableentry.macroPropertiesMap_IdColumn}, false);
            this.relationmacroPropertiesMap_entry.Nested = true;
            this.Relations.Add(this.relationmacroPropertiesMap_entry);
            this._relationentry_net_rptools_lib_MD5Key = new global::System.Data.DataRelation("entry_net.rptools.lib.MD5Key", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_lib_MD5Key.entry_IdColumn}, false);
            this._relationentry_net_rptools_lib_MD5Key.Nested = true;
            this.Relations.Add(this._relationentry_net_rptools_lib_MD5Key);
            this._relationentry_net_rptools_maptool_model_GUID = new global::System.Data.DataRelation("entry_net.rptools.maptool.model.GUID", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_GUID.entry_IdColumn}, false);
            this._relationentry_net_rptools_maptool_model_GUID.Nested = true;
            this.Relations.Add(this._relationentry_net_rptools_maptool_model_GUID);
            this._relationentry_net_rptools_CaseInsensitiveHashMap__KeyValue = new global::System.Data.DataRelation("entry_net.rptools.CaseInsensitiveHashMap_-KeyValue", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.entry_IdColumn}, false);
            this._relationentry_net_rptools_CaseInsensitiveHashMap__KeyValue.Nested = true;
            this.Relations.Add(this._relationentry_net_rptools_CaseInsensitiveHashMap__KeyValue);
            this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_value = new global::System.Data.DataRelation("net.rptools.CaseInsensitiveHashMap_-KeyValue_value", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_CaseInsensitiveHashMap__KeyValue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablevalue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn}, false);
            this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_value.Nested = true;
            this.Relations.Add(this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_value);
            this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class = new global::System.Data.DataRelation("net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_CaseInsensitiveHashMap__KeyValue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_outer_class._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn}, false);
            this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class.Nested = true;
            this.Relations.Add(this._relationnet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class);
            this._relationentry_net_rptools_maptool_model_MacroButtonProperties = new global::System.Data.DataRelation("entry_net.rptools.maptool.model.MacroButtonProperties", new global::System.Data.DataColumn[] {
                        this.tableentry.entry_IdColumn}, new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_MacroButtonProperties.entry_IdColumn}, false);
            this._relationentry_net_rptools_maptool_model_MacroButtonProperties.Nested = true;
            this.Relations.Add(this._relationentry_net_rptools_maptool_model_MacroButtonProperties);
            this._relationnet_rptools_maptool_model_Token_id = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_id", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableid._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_id.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_id);
            this._relationnet_rptools_maptool_model_Token_exposedAreaGUID = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_exposedAreaGUID", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexposedAreaGUID._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_exposedAreaGUID.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_exposedAreaGUID);
            this._relationnet_rptools_maptool_model_Token_imageAssetMap = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_imageAssetMap", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableimageAssetMap._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_imageAssetMap.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_imageAssetMap);
            this._relationnet_rptools_maptool_model_Token_sizeMap = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_sizeMap", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesizeMap._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_sizeMap.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_sizeMap);
            this._relationnet_rptools_maptool_model_Token_ownerList = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_ownerList", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableownerList._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_ownerList.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_ownerList);
            this._relationnet_rptools_maptool_model_Token_portraitImage = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_portraitImage", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableportraitImage._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_portraitImage.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_portraitImage);
            this._relationnet_rptools_maptool_model_Token_state = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_state", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestate._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_state.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_state);
            this._relationnet_rptools_maptool_model_Token_propertyMapCI = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_propertyMapCI", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablepropertyMapCI._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_propertyMapCI.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_propertyMapCI);
            this.relationpropertyMapCI_store = new global::System.Data.DataRelation("propertyMapCI_store", new global::System.Data.DataColumn[] {
                        this.tablepropertyMapCI.propertyMapCI_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestore.propertyMapCI_IdColumn}, false);
            this.relationpropertyMapCI_store.Nested = true;
            this.Relations.Add(this.relationpropertyMapCI_store);
            this._relationnet_rptools_maptool_model_Token_macroPropertiesMap = new global::System.Data.DataRelation("net.rptools.maptool.model.Token_macroPropertiesMap", new global::System.Data.DataColumn[] {
                        this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemacroPropertiesMap._net_rptools_maptool_model_Token_IdColumn}, false);
            this._relationnet_rptools_maptool_model_Token_macroPropertiesMap.Nested = true;
            this.Relations.Add(this._relationnet_rptools_maptool_model_Token_macroPropertiesMap);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeentry() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_net_rptools_lib_MD5Key() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_net_rptools_maptool_model_GUID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_net_rptools_CaseInsensitiveHashMap__KeyValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevalue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_outer_class() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_net_rptools_maptool_model_MacroButtonProperties() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_net_rptools_maptool_model_Token() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeid() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeexposedAreaGUID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeimageAssetMap() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesizeMap() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeownerList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeportraitImage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializestate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepropertyMapCI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializestore() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemacroPropertiesMap() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void entryRowChangeEventHandler(object sender, entryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _net_rptools_lib_MD5KeyRowChangeEventHandler(object sender, _net_rptools_lib_MD5KeyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _net_rptools_maptool_model_GUIDRowChangeEventHandler(object sender, _net_rptools_maptool_model_GUIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEventHandler(object sender, _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void valueRowChangeEventHandler(object sender, valueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _outer_classRowChangeEventHandler(object sender, _outer_classRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEventHandler(object sender, _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _net_rptools_maptool_model_TokenRowChangeEventHandler(object sender, _net_rptools_maptool_model_TokenRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void idRowChangeEventHandler(object sender, idRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void exposedAreaGUIDRowChangeEventHandler(object sender, exposedAreaGUIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void imageAssetMapRowChangeEventHandler(object sender, imageAssetMapRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void sizeMapRowChangeEventHandler(object sender, sizeMapRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ownerListRowChangeEventHandler(object sender, ownerListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void portraitImageRowChangeEventHandler(object sender, portraitImageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void stateRowChangeEventHandler(object sender, stateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void propertyMapCIRowChangeEventHandler(object sender, propertyMapCIRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void storeRowChangeEventHandler(object sender, storeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void macroPropertiesMapRowChangeEventHandler(object sender, macroPropertiesMapRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class entryDataTable : global::System.Data.TypedTableBase<entryRow> {
            
            private global::System.Data.DataColumn column_null;
            
            private global::System.Data.DataColumn column_java_class;
            
            private global::System.Data.DataColumn column_string;
            
            private global::System.Data.DataColumn columnboolean;
            
            private global::System.Data.DataColumn column_int;
            
            private global::System.Data.DataColumn columnentry_Id;
            
            private global::System.Data.DataColumn columnimageAssetMap_Id;
            
            private global::System.Data.DataColumn columnsizeMap_Id;
            
            private global::System.Data.DataColumn columnstate_Id;
            
            private global::System.Data.DataColumn columnstore_Id;
            
            private global::System.Data.DataColumn columnmacroPropertiesMap_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryDataTable() {
                this.TableName = "entry";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal entryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected entryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _nullColumn {
                get {
                    return this.column_null;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _java_classColumn {
                get {
                    return this.column_java_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _stringColumn {
                get {
                    return this.column_string;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn booleanColumn {
                get {
                    return this.columnboolean;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _intColumn {
                get {
                    return this.column_int;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn entry_IdColumn {
                get {
                    return this.columnentry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn imageAssetMap_IdColumn {
                get {
                    return this.columnimageAssetMap_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sizeMap_IdColumn {
                get {
                    return this.columnsizeMap_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn state_IdColumn {
                get {
                    return this.columnstate_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn store_IdColumn {
                get {
                    return this.columnstore_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn macroPropertiesMap_IdColumn {
                get {
                    return this.columnmacroPropertiesMap_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow this[int index] {
                get {
                    return ((entryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event entryRowChangeEventHandler entryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event entryRowChangeEventHandler entryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event entryRowChangeEventHandler entryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event entryRowChangeEventHandler entryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddentryRow(entryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow AddentryRow(string _null, string _java_class, string _string, string boolean, string _int, imageAssetMapRow parentimageAssetMapRowByimageAssetMap_entry, sizeMapRow parentsizeMapRowBysizeMap_entry, stateRow parentstateRowBystate_entry, storeRow parentstoreRowBystore_entry, macroPropertiesMapRow parentmacroPropertiesMapRowBymacroPropertiesMap_entry) {
                entryRow rowentryRow = ((entryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        _null,
                        _java_class,
                        _string,
                        boolean,
                        _int,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null};
                if ((parentimageAssetMapRowByimageAssetMap_entry != null)) {
                    columnValuesArray[6] = parentimageAssetMapRowByimageAssetMap_entry[0];
                }
                if ((parentsizeMapRowBysizeMap_entry != null)) {
                    columnValuesArray[7] = parentsizeMapRowBysizeMap_entry[0];
                }
                if ((parentstateRowBystate_entry != null)) {
                    columnValuesArray[8] = parentstateRowBystate_entry[0];
                }
                if ((parentstoreRowBystore_entry != null)) {
                    columnValuesArray[9] = parentstoreRowBystore_entry[0];
                }
                if ((parentmacroPropertiesMapRowBymacroPropertiesMap_entry != null)) {
                    columnValuesArray[10] = parentmacroPropertiesMapRowBymacroPropertiesMap_entry[0];
                }
                rowentryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowentryRow);
                return rowentryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                entryDataTable cln = ((entryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new entryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column_null = base.Columns["null"];
                this.column_java_class = base.Columns["java-class"];
                this.column_string = base.Columns["string"];
                this.columnboolean = base.Columns["boolean"];
                this.column_int = base.Columns["int"];
                this.columnentry_Id = base.Columns["entry_Id"];
                this.columnimageAssetMap_Id = base.Columns["imageAssetMap_Id"];
                this.columnsizeMap_Id = base.Columns["sizeMap_Id"];
                this.columnstate_Id = base.Columns["state_Id"];
                this.columnstore_Id = base.Columns["store_Id"];
                this.columnmacroPropertiesMap_Id = base.Columns["macroPropertiesMap_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column_null = new global::System.Data.DataColumn("null", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_null);
                this.column_java_class = new global::System.Data.DataColumn("java-class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_java_class);
                this.column_string = new global::System.Data.DataColumn("string", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_string);
                this.columnboolean = new global::System.Data.DataColumn("boolean", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnboolean);
                this.column_int = new global::System.Data.DataColumn("int", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_int);
                this.columnentry_Id = new global::System.Data.DataColumn("entry_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnentry_Id);
                this.columnimageAssetMap_Id = new global::System.Data.DataColumn("imageAssetMap_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnimageAssetMap_Id);
                this.columnsizeMap_Id = new global::System.Data.DataColumn("sizeMap_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsizeMap_Id);
                this.columnstate_Id = new global::System.Data.DataColumn("state_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnstate_Id);
                this.columnstore_Id = new global::System.Data.DataColumn("store_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnstore_Id);
                this.columnmacroPropertiesMap_Id = new global::System.Data.DataColumn("macroPropertiesMap_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmacroPropertiesMap_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnentry_Id}, true));
                this.columnentry_Id.AutoIncrement = true;
                this.columnentry_Id.AllowDBNull = false;
                this.columnentry_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow NewentryRow() {
                return ((entryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new entryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(entryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.entryRowChanged != null)) {
                    this.entryRowChanged(this, new entryRowChangeEvent(((entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.entryRowChanging != null)) {
                    this.entryRowChanging(this, new entryRowChangeEvent(((entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.entryRowDeleted != null)) {
                    this.entryRowDeleted(this, new entryRowChangeEvent(((entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.entryRowDeleting != null)) {
                    this.entryRowDeleting(this, new entryRowChangeEvent(((entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveentryRow(entryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "entryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _net_rptools_lib_MD5KeyDataTable : global::System.Data.TypedTableBase<_net_rptools_lib_MD5KeyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnentry_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyDataTable() {
                this.TableName = "net.rptools.lib.MD5Key";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_lib_MD5KeyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _net_rptools_lib_MD5KeyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn entry_IdColumn {
                get {
                    return this.columnentry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyRow this[int index] {
                get {
                    return ((_net_rptools_lib_MD5KeyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_lib_MD5KeyRowChangeEventHandler _net_rptools_lib_MD5KeyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_lib_MD5KeyRowChangeEventHandler _net_rptools_lib_MD5KeyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_lib_MD5KeyRowChangeEventHandler _net_rptools_lib_MD5KeyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_lib_MD5KeyRowChangeEventHandler _net_rptools_lib_MD5KeyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_net_rptools_lib_MD5KeyRow(_net_rptools_lib_MD5KeyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyRow Add_net_rptools_lib_MD5KeyRow(string id, entryRow _parententryRowByentry_net_rptools_lib_MD5Key) {
                _net_rptools_lib_MD5KeyRow row_net_rptools_lib_MD5KeyRow = ((_net_rptools_lib_MD5KeyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        null};
                if ((_parententryRowByentry_net_rptools_lib_MD5Key != null)) {
                    columnValuesArray[1] = _parententryRowByentry_net_rptools_lib_MD5Key[5];
                }
                row_net_rptools_lib_MD5KeyRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_net_rptools_lib_MD5KeyRow);
                return row_net_rptools_lib_MD5KeyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _net_rptools_lib_MD5KeyDataTable cln = ((_net_rptools_lib_MD5KeyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _net_rptools_lib_MD5KeyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnentry_Id = base.Columns["entry_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnentry_Id = new global::System.Data.DataColumn("entry_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnentry_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyRow New_net_rptools_lib_MD5KeyRow() {
                return ((_net_rptools_lib_MD5KeyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _net_rptools_lib_MD5KeyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_net_rptools_lib_MD5KeyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._net_rptools_lib_MD5KeyRowChanged != null)) {
                    this._net_rptools_lib_MD5KeyRowChanged(this, new _net_rptools_lib_MD5KeyRowChangeEvent(((_net_rptools_lib_MD5KeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._net_rptools_lib_MD5KeyRowChanging != null)) {
                    this._net_rptools_lib_MD5KeyRowChanging(this, new _net_rptools_lib_MD5KeyRowChangeEvent(((_net_rptools_lib_MD5KeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._net_rptools_lib_MD5KeyRowDeleted != null)) {
                    this._net_rptools_lib_MD5KeyRowDeleted(this, new _net_rptools_lib_MD5KeyRowChangeEvent(((_net_rptools_lib_MD5KeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._net_rptools_lib_MD5KeyRowDeleting != null)) {
                    this._net_rptools_lib_MD5KeyRowDeleting(this, new _net_rptools_lib_MD5KeyRowChangeEvent(((_net_rptools_lib_MD5KeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_net_rptools_lib_MD5KeyRow(_net_rptools_lib_MD5KeyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_net_rptools_lib_MD5KeyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _net_rptools_maptool_model_GUIDDataTable : global::System.Data.TypedTableBase<_net_rptools_maptool_model_GUIDRow> {
            
            private global::System.Data.DataColumn columnbaGUID;
            
            private global::System.Data.DataColumn columnentry_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDDataTable() {
                this.TableName = "net.rptools.maptool.model.GUID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_maptool_model_GUIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _net_rptools_maptool_model_GUIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn baGUIDColumn {
                get {
                    return this.columnbaGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn entry_IdColumn {
                get {
                    return this.columnentry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDRow this[int index] {
                get {
                    return ((_net_rptools_maptool_model_GUIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_GUIDRowChangeEventHandler _net_rptools_maptool_model_GUIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_GUIDRowChangeEventHandler _net_rptools_maptool_model_GUIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_GUIDRowChangeEventHandler _net_rptools_maptool_model_GUIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_GUIDRowChangeEventHandler _net_rptools_maptool_model_GUIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_net_rptools_maptool_model_GUIDRow(_net_rptools_maptool_model_GUIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDRow Add_net_rptools_maptool_model_GUIDRow(string baGUID, entryRow _parententryRowByentry_net_rptools_maptool_model_GUID) {
                _net_rptools_maptool_model_GUIDRow row_net_rptools_maptool_model_GUIDRow = ((_net_rptools_maptool_model_GUIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        baGUID,
                        null};
                if ((_parententryRowByentry_net_rptools_maptool_model_GUID != null)) {
                    columnValuesArray[1] = _parententryRowByentry_net_rptools_maptool_model_GUID[5];
                }
                row_net_rptools_maptool_model_GUIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_net_rptools_maptool_model_GUIDRow);
                return row_net_rptools_maptool_model_GUIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _net_rptools_maptool_model_GUIDDataTable cln = ((_net_rptools_maptool_model_GUIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _net_rptools_maptool_model_GUIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbaGUID = base.Columns["baGUID"];
                this.columnentry_Id = base.Columns["entry_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbaGUID = new global::System.Data.DataColumn("baGUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaGUID);
                this.columnentry_Id = new global::System.Data.DataColumn("entry_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnentry_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDRow New_net_rptools_maptool_model_GUIDRow() {
                return ((_net_rptools_maptool_model_GUIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _net_rptools_maptool_model_GUIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_net_rptools_maptool_model_GUIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._net_rptools_maptool_model_GUIDRowChanged != null)) {
                    this._net_rptools_maptool_model_GUIDRowChanged(this, new _net_rptools_maptool_model_GUIDRowChangeEvent(((_net_rptools_maptool_model_GUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._net_rptools_maptool_model_GUIDRowChanging != null)) {
                    this._net_rptools_maptool_model_GUIDRowChanging(this, new _net_rptools_maptool_model_GUIDRowChangeEvent(((_net_rptools_maptool_model_GUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._net_rptools_maptool_model_GUIDRowDeleted != null)) {
                    this._net_rptools_maptool_model_GUIDRowDeleted(this, new _net_rptools_maptool_model_GUIDRowChangeEvent(((_net_rptools_maptool_model_GUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._net_rptools_maptool_model_GUIDRowDeleting != null)) {
                    this._net_rptools_maptool_model_GUIDRowDeleting(this, new _net_rptools_maptool_model_GUIDRowChangeEvent(((_net_rptools_maptool_model_GUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_net_rptools_maptool_model_GUIDRow(_net_rptools_maptool_model_GUIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_net_rptools_maptool_model_GUIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable : global::System.Data.TypedTableBase<_net_rptools_CaseInsensitiveHashMap__KeyValueRow> {
            
            private global::System.Data.DataColumn columnkey;
            
            private global::System.Data.DataColumn column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id;
            
            private global::System.Data.DataColumn columnentry_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable() {
                this.TableName = "net.rptools.CaseInsensitiveHashMap_-KeyValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn keyColumn {
                get {
                    return this.columnkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn {
                get {
                    return this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn entry_IdColumn {
                get {
                    return this.columnentry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow this[int index] {
                get {
                    return ((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEventHandler _net_rptools_CaseInsensitiveHashMap__KeyValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEventHandler _net_rptools_CaseInsensitiveHashMap__KeyValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEventHandler _net_rptools_CaseInsensitiveHashMap__KeyValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEventHandler _net_rptools_CaseInsensitiveHashMap__KeyValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_net_rptools_CaseInsensitiveHashMap__KeyValueRow(_net_rptools_CaseInsensitiveHashMap__KeyValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow Add_net_rptools_CaseInsensitiveHashMap__KeyValueRow(string key, entryRow _parententryRowByentry_net_rptools_CaseInsensitiveHashMap__KeyValue) {
                _net_rptools_CaseInsensitiveHashMap__KeyValueRow row_net_rptools_CaseInsensitiveHashMap__KeyValueRow = ((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        key,
                        null,
                        null};
                if ((_parententryRowByentry_net_rptools_CaseInsensitiveHashMap__KeyValue != null)) {
                    columnValuesArray[2] = _parententryRowByentry_net_rptools_CaseInsensitiveHashMap__KeyValue[5];
                }
                row_net_rptools_CaseInsensitiveHashMap__KeyValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_net_rptools_CaseInsensitiveHashMap__KeyValueRow);
                return row_net_rptools_CaseInsensitiveHashMap__KeyValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable cln = ((_net_rptools_CaseInsensitiveHashMap__KeyValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnkey = base.Columns["key"];
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id = base.Columns["net.rptools.CaseInsensitiveHashMap_-KeyValue_Id"];
                this.columnentry_Id = base.Columns["entry_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnkey = new global::System.Data.DataColumn("key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey);
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id = new global::System.Data.DataColumn("net.rptools.CaseInsensitiveHashMap_-KeyValue_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id);
                this.columnentry_Id = new global::System.Data.DataColumn("entry_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnentry_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id}, true));
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id.AutoIncrement = true;
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id.AllowDBNull = false;
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow New_net_rptools_CaseInsensitiveHashMap__KeyValueRow() {
                return ((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _net_rptools_CaseInsensitiveHashMap__KeyValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_net_rptools_CaseInsensitiveHashMap__KeyValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._net_rptools_CaseInsensitiveHashMap__KeyValueRowChanged != null)) {
                    this._net_rptools_CaseInsensitiveHashMap__KeyValueRowChanged(this, new _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent(((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._net_rptools_CaseInsensitiveHashMap__KeyValueRowChanging != null)) {
                    this._net_rptools_CaseInsensitiveHashMap__KeyValueRowChanging(this, new _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent(((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._net_rptools_CaseInsensitiveHashMap__KeyValueRowDeleted != null)) {
                    this._net_rptools_CaseInsensitiveHashMap__KeyValueRowDeleted(this, new _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent(((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._net_rptools_CaseInsensitiveHashMap__KeyValueRowDeleting != null)) {
                    this._net_rptools_CaseInsensitiveHashMap__KeyValueRowDeleting(this, new _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent(((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_net_rptools_CaseInsensitiveHashMap__KeyValueRow(_net_rptools_CaseInsensitiveHashMap__KeyValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_net_rptools_CaseInsensitiveHashMap__KeyValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class valueDataTable : global::System.Data.TypedTableBase<valueRow> {
            
            private global::System.Data.DataColumn column_class;
            
            private global::System.Data.DataColumn columnvalue_Text;
            
            private global::System.Data.DataColumn column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueDataTable() {
                this.TableName = "value";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal valueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected valueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _classColumn {
                get {
                    return this.column_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn value_TextColumn {
                get {
                    return this.columnvalue_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn {
                get {
                    return this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueRow this[int index] {
                get {
                    return ((valueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event valueRowChangeEventHandler valueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event valueRowChangeEventHandler valueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event valueRowChangeEventHandler valueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event valueRowChangeEventHandler valueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvalueRow(valueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueRow AddvalueRow(string _class, string value_Text, _net_rptools_CaseInsensitiveHashMap__KeyValueRow _parent_net_rptools_CaseInsensitiveHashMap__KeyValueRowBynet_rptools_CaseInsensitiveHashMap__KeyValue_value) {
                valueRow rowvalueRow = ((valueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        _class,
                        value_Text,
                        null};
                if ((_parent_net_rptools_CaseInsensitiveHashMap__KeyValueRowBynet_rptools_CaseInsensitiveHashMap__KeyValue_value != null)) {
                    columnValuesArray[2] = _parent_net_rptools_CaseInsensitiveHashMap__KeyValueRowBynet_rptools_CaseInsensitiveHashMap__KeyValue_value[1];
                }
                rowvalueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvalueRow);
                return rowvalueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                valueDataTable cln = ((valueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new valueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column_class = base.Columns["class"];
                this.columnvalue_Text = base.Columns["value_Text"];
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id = base.Columns["net.rptools.CaseInsensitiveHashMap_-KeyValue_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column_class = new global::System.Data.DataColumn("class", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.column_class);
                this.columnvalue_Text = new global::System.Data.DataColumn("value_Text", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnvalue_Text);
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id = new global::System.Data.DataColumn("net.rptools.CaseInsensitiveHashMap_-KeyValue_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id);
                this.column_class.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueRow NewvalueRow() {
                return ((valueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new valueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(valueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.valueRowChanged != null)) {
                    this.valueRowChanged(this, new valueRowChangeEvent(((valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.valueRowChanging != null)) {
                    this.valueRowChanging(this, new valueRowChangeEvent(((valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.valueRowDeleted != null)) {
                    this.valueRowDeleted(this, new valueRowChangeEvent(((valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.valueRowDeleting != null)) {
                    this.valueRowDeleting(this, new valueRowChangeEvent(((valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevalueRow(valueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "valueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _outer_classDataTable : global::System.Data.TypedTableBase<_outer_classRow> {
            
            private global::System.Data.DataColumn columnreference;
            
            private global::System.Data.DataColumn column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classDataTable() {
                this.TableName = "outer-class";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _outer_classDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _outer_classDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn referenceColumn {
                get {
                    return this.columnreference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn {
                get {
                    return this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classRow this[int index] {
                get {
                    return ((_outer_classRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _outer_classRowChangeEventHandler _outer_classRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _outer_classRowChangeEventHandler _outer_classRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _outer_classRowChangeEventHandler _outer_classRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _outer_classRowChangeEventHandler _outer_classRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_outer_classRow(_outer_classRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classRow Add_outer_classRow(string reference, _net_rptools_CaseInsensitiveHashMap__KeyValueRow _parent_net_rptools_CaseInsensitiveHashMap__KeyValueRowBynet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class) {
                _outer_classRow row_outer_classRow = ((_outer_classRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        reference,
                        null};
                if ((_parent_net_rptools_CaseInsensitiveHashMap__KeyValueRowBynet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class != null)) {
                    columnValuesArray[1] = _parent_net_rptools_CaseInsensitiveHashMap__KeyValueRowBynet_rptools_CaseInsensitiveHashMap__KeyValue_outer_class[1];
                }
                row_outer_classRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_outer_classRow);
                return row_outer_classRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _outer_classDataTable cln = ((_outer_classDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _outer_classDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnreference = base.Columns["reference"];
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id = base.Columns["net.rptools.CaseInsensitiveHashMap_-KeyValue_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnreference = new global::System.Data.DataColumn("reference", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnreference);
                this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id = new global::System.Data.DataColumn("net.rptools.CaseInsensitiveHashMap_-KeyValue_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_CaseInsensitiveHashMap__KeyValue_Id);
                this.columnreference.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classRow New_outer_classRow() {
                return ((_outer_classRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _outer_classRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_outer_classRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._outer_classRowChanged != null)) {
                    this._outer_classRowChanged(this, new _outer_classRowChangeEvent(((_outer_classRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._outer_classRowChanging != null)) {
                    this._outer_classRowChanging(this, new _outer_classRowChangeEvent(((_outer_classRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._outer_classRowDeleted != null)) {
                    this._outer_classRowDeleted(this, new _outer_classRowChangeEvent(((_outer_classRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._outer_classRowDeleting != null)) {
                    this._outer_classRowDeleting(this, new _outer_classRowChangeEvent(((_outer_classRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_outer_classRow(_outer_classRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_outer_classDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _net_rptools_maptool_model_MacroButtonPropertiesDataTable : global::System.Data.TypedTableBase<_net_rptools_maptool_model_MacroButtonPropertiesRow> {
            
            private global::System.Data.DataColumn columnsaveLocation;
            
            private global::System.Data.DataColumn columnindex;
            
            private global::System.Data.DataColumn columncolorKey;
            
            private global::System.Data.DataColumn columnhotKey;
            
            private global::System.Data.DataColumn columncommand;
            
            private global::System.Data.DataColumn columnlabel;
            
            private global::System.Data.DataColumn columngroup;
            
            private global::System.Data.DataColumn columnsortby;
            
            private global::System.Data.DataColumn columnautoExecute;
            
            private global::System.Data.DataColumn columnincludeLabel;
            
            private global::System.Data.DataColumn columnapplyToTokens;
            
            private global::System.Data.DataColumn columnfontColorKey;
            
            private global::System.Data.DataColumn columnfontSize;
            
            private global::System.Data.DataColumn columnminWidth;
            
            private global::System.Data.DataColumn columnmaxWidth;
            
            private global::System.Data.DataColumn columnallowPlayerEdits;
            
            private global::System.Data.DataColumn columntoolTip;
            
            private global::System.Data.DataColumn columncommonMacro;
            
            private global::System.Data.DataColumn columncompareGroup;
            
            private global::System.Data.DataColumn columncompareSortPrefix;
            
            private global::System.Data.DataColumn columncompareCommand;
            
            private global::System.Data.DataColumn columncompareIncludeLabel;
            
            private global::System.Data.DataColumn columncompareAutoExecute;
            
            private global::System.Data.DataColumn columncompareApplyToSelectedTokens;
            
            private global::System.Data.DataColumn columnentry_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesDataTable() {
                this.TableName = "net.rptools.maptool.model.MacroButtonProperties";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_maptool_model_MacroButtonPropertiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _net_rptools_maptool_model_MacroButtonPropertiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn saveLocationColumn {
                get {
                    return this.columnsaveLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn indexColumn {
                get {
                    return this.columnindex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn colorKeyColumn {
                get {
                    return this.columncolorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hotKeyColumn {
                get {
                    return this.columnhotKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commandColumn {
                get {
                    return this.columncommand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn labelColumn {
                get {
                    return this.columnlabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn groupColumn {
                get {
                    return this.columngroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sortbyColumn {
                get {
                    return this.columnsortby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn autoExecuteColumn {
                get {
                    return this.columnautoExecute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn includeLabelColumn {
                get {
                    return this.columnincludeLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn applyToTokensColumn {
                get {
                    return this.columnapplyToTokens;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fontColorKeyColumn {
                get {
                    return this.columnfontColorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fontSizeColumn {
                get {
                    return this.columnfontSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn minWidthColumn {
                get {
                    return this.columnminWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn maxWidthColumn {
                get {
                    return this.columnmaxWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn allowPlayerEditsColumn {
                get {
                    return this.columnallowPlayerEdits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn toolTipColumn {
                get {
                    return this.columntoolTip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commonMacroColumn {
                get {
                    return this.columncommonMacro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn compareGroupColumn {
                get {
                    return this.columncompareGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn compareSortPrefixColumn {
                get {
                    return this.columncompareSortPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn compareCommandColumn {
                get {
                    return this.columncompareCommand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn compareIncludeLabelColumn {
                get {
                    return this.columncompareIncludeLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn compareAutoExecuteColumn {
                get {
                    return this.columncompareAutoExecute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn compareApplyToSelectedTokensColumn {
                get {
                    return this.columncompareApplyToSelectedTokens;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn entry_IdColumn {
                get {
                    return this.columnentry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesRow this[int index] {
                get {
                    return ((_net_rptools_maptool_model_MacroButtonPropertiesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEventHandler _net_rptools_maptool_model_MacroButtonPropertiesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEventHandler _net_rptools_maptool_model_MacroButtonPropertiesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEventHandler _net_rptools_maptool_model_MacroButtonPropertiesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEventHandler _net_rptools_maptool_model_MacroButtonPropertiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_net_rptools_maptool_model_MacroButtonPropertiesRow(_net_rptools_maptool_model_MacroButtonPropertiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesRow Add_net_rptools_maptool_model_MacroButtonPropertiesRow(
                        string saveLocation, 
                        string index, 
                        string colorKey, 
                        string hotKey, 
                        string command, 
                        string label, 
                        string group, 
                        string sortby, 
                        string autoExecute, 
                        string includeLabel, 
                        string applyToTokens, 
                        string fontColorKey, 
                        string fontSize, 
                        string minWidth, 
                        string maxWidth, 
                        string allowPlayerEdits, 
                        string toolTip, 
                        string commonMacro, 
                        string compareGroup, 
                        string compareSortPrefix, 
                        string compareCommand, 
                        string compareIncludeLabel, 
                        string compareAutoExecute, 
                        string compareApplyToSelectedTokens, 
                        entryRow _parententryRowByentry_net_rptools_maptool_model_MacroButtonProperties) {
                _net_rptools_maptool_model_MacroButtonPropertiesRow row_net_rptools_maptool_model_MacroButtonPropertiesRow = ((_net_rptools_maptool_model_MacroButtonPropertiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        saveLocation,
                        index,
                        colorKey,
                        hotKey,
                        command,
                        label,
                        group,
                        sortby,
                        autoExecute,
                        includeLabel,
                        applyToTokens,
                        fontColorKey,
                        fontSize,
                        minWidth,
                        maxWidth,
                        allowPlayerEdits,
                        toolTip,
                        commonMacro,
                        compareGroup,
                        compareSortPrefix,
                        compareCommand,
                        compareIncludeLabel,
                        compareAutoExecute,
                        compareApplyToSelectedTokens,
                        null};
                if ((_parententryRowByentry_net_rptools_maptool_model_MacroButtonProperties != null)) {
                    columnValuesArray[24] = _parententryRowByentry_net_rptools_maptool_model_MacroButtonProperties[5];
                }
                row_net_rptools_maptool_model_MacroButtonPropertiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_net_rptools_maptool_model_MacroButtonPropertiesRow);
                return row_net_rptools_maptool_model_MacroButtonPropertiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _net_rptools_maptool_model_MacroButtonPropertiesDataTable cln = ((_net_rptools_maptool_model_MacroButtonPropertiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _net_rptools_maptool_model_MacroButtonPropertiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnsaveLocation = base.Columns["saveLocation"];
                this.columnindex = base.Columns["index"];
                this.columncolorKey = base.Columns["colorKey"];
                this.columnhotKey = base.Columns["hotKey"];
                this.columncommand = base.Columns["command"];
                this.columnlabel = base.Columns["label"];
                this.columngroup = base.Columns["group"];
                this.columnsortby = base.Columns["sortby"];
                this.columnautoExecute = base.Columns["autoExecute"];
                this.columnincludeLabel = base.Columns["includeLabel"];
                this.columnapplyToTokens = base.Columns["applyToTokens"];
                this.columnfontColorKey = base.Columns["fontColorKey"];
                this.columnfontSize = base.Columns["fontSize"];
                this.columnminWidth = base.Columns["minWidth"];
                this.columnmaxWidth = base.Columns["maxWidth"];
                this.columnallowPlayerEdits = base.Columns["allowPlayerEdits"];
                this.columntoolTip = base.Columns["toolTip"];
                this.columncommonMacro = base.Columns["commonMacro"];
                this.columncompareGroup = base.Columns["compareGroup"];
                this.columncompareSortPrefix = base.Columns["compareSortPrefix"];
                this.columncompareCommand = base.Columns["compareCommand"];
                this.columncompareIncludeLabel = base.Columns["compareIncludeLabel"];
                this.columncompareAutoExecute = base.Columns["compareAutoExecute"];
                this.columncompareApplyToSelectedTokens = base.Columns["compareApplyToSelectedTokens"];
                this.columnentry_Id = base.Columns["entry_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnsaveLocation = new global::System.Data.DataColumn("saveLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaveLocation);
                this.columnindex = new global::System.Data.DataColumn("index", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnindex);
                this.columncolorKey = new global::System.Data.DataColumn("colorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolorKey);
                this.columnhotKey = new global::System.Data.DataColumn("hotKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhotKey);
                this.columncommand = new global::System.Data.DataColumn("command", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommand);
                this.columnlabel = new global::System.Data.DataColumn("label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlabel);
                this.columngroup = new global::System.Data.DataColumn("group", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup);
                this.columnsortby = new global::System.Data.DataColumn("sortby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsortby);
                this.columnautoExecute = new global::System.Data.DataColumn("autoExecute", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnautoExecute);
                this.columnincludeLabel = new global::System.Data.DataColumn("includeLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincludeLabel);
                this.columnapplyToTokens = new global::System.Data.DataColumn("applyToTokens", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplyToTokens);
                this.columnfontColorKey = new global::System.Data.DataColumn("fontColorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfontColorKey);
                this.columnfontSize = new global::System.Data.DataColumn("fontSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfontSize);
                this.columnminWidth = new global::System.Data.DataColumn("minWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminWidth);
                this.columnmaxWidth = new global::System.Data.DataColumn("maxWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxWidth);
                this.columnallowPlayerEdits = new global::System.Data.DataColumn("allowPlayerEdits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnallowPlayerEdits);
                this.columntoolTip = new global::System.Data.DataColumn("toolTip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoolTip);
                this.columncommonMacro = new global::System.Data.DataColumn("commonMacro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommonMacro);
                this.columncompareGroup = new global::System.Data.DataColumn("compareGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompareGroup);
                this.columncompareSortPrefix = new global::System.Data.DataColumn("compareSortPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompareSortPrefix);
                this.columncompareCommand = new global::System.Data.DataColumn("compareCommand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompareCommand);
                this.columncompareIncludeLabel = new global::System.Data.DataColumn("compareIncludeLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompareIncludeLabel);
                this.columncompareAutoExecute = new global::System.Data.DataColumn("compareAutoExecute", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompareAutoExecute);
                this.columncompareApplyToSelectedTokens = new global::System.Data.DataColumn("compareApplyToSelectedTokens", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompareApplyToSelectedTokens);
                this.columnentry_Id = new global::System.Data.DataColumn("entry_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnentry_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesRow New_net_rptools_maptool_model_MacroButtonPropertiesRow() {
                return ((_net_rptools_maptool_model_MacroButtonPropertiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _net_rptools_maptool_model_MacroButtonPropertiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_net_rptools_maptool_model_MacroButtonPropertiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._net_rptools_maptool_model_MacroButtonPropertiesRowChanged != null)) {
                    this._net_rptools_maptool_model_MacroButtonPropertiesRowChanged(this, new _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent(((_net_rptools_maptool_model_MacroButtonPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._net_rptools_maptool_model_MacroButtonPropertiesRowChanging != null)) {
                    this._net_rptools_maptool_model_MacroButtonPropertiesRowChanging(this, new _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent(((_net_rptools_maptool_model_MacroButtonPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._net_rptools_maptool_model_MacroButtonPropertiesRowDeleted != null)) {
                    this._net_rptools_maptool_model_MacroButtonPropertiesRowDeleted(this, new _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent(((_net_rptools_maptool_model_MacroButtonPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._net_rptools_maptool_model_MacroButtonPropertiesRowDeleting != null)) {
                    this._net_rptools_maptool_model_MacroButtonPropertiesRowDeleting(this, new _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent(((_net_rptools_maptool_model_MacroButtonPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_net_rptools_maptool_model_MacroButtonPropertiesRow(_net_rptools_maptool_model_MacroButtonPropertiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_net_rptools_maptool_model_MacroButtonPropertiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _net_rptools_maptool_model_TokenDataTable : global::System.Data.TypedTableBase<_net_rptools_maptool_model_TokenRow> {
            
            private global::System.Data.DataColumn columnbeingImpersonated;
            
            private global::System.Data.DataColumn columnx;
            
            private global::System.Data.DataColumn columny;
            
            private global::System.Data.DataColumn columnz;
            
            private global::System.Data.DataColumn columnanchorX;
            
            private global::System.Data.DataColumn columnanchorY;
            
            private global::System.Data.DataColumn columnsizeScale;
            
            private global::System.Data.DataColumn columnlastX;
            
            private global::System.Data.DataColumn columnlastY;
            
            private global::System.Data.DataColumn columnsnapToScale;
            
            private global::System.Data.DataColumn columnwidth;
            
            private global::System.Data.DataColumn columnheight;
            
            private global::System.Data.DataColumn columnscaleX;
            
            private global::System.Data.DataColumn columnscaleY;
            
            private global::System.Data.DataColumn columnsnapToGrid;
            
            private global::System.Data.DataColumn columnisVisible;
            
            private global::System.Data.DataColumn columnvisibleOnlyToOwner;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnownerType;
            
            private global::System.Data.DataColumn columntokenShape;
            
            private global::System.Data.DataColumn columntokenType;
            
            private global::System.Data.DataColumn columnlayer;
            
            private global::System.Data.DataColumn columnpropertyType;
            
            private global::System.Data.DataColumn columnfacing;
            
            private global::System.Data.DataColumn columnisFlippedX;
            
            private global::System.Data.DataColumn columnisFlippedY;
            
            private global::System.Data.DataColumn columnsightType;
            
            private global::System.Data.DataColumn columnhasSight;
            
            private global::System.Data.DataColumn columnlabel;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columngmNotes;
            
            private global::System.Data.DataColumn columnspeechMap;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenDataTable() {
                this.TableName = "net.rptools.maptool.model.Token";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_maptool_model_TokenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _net_rptools_maptool_model_TokenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn beingImpersonatedColumn {
                get {
                    return this.columnbeingImpersonated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xColumn {
                get {
                    return this.columnx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn yColumn {
                get {
                    return this.columny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zColumn {
                get {
                    return this.columnz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn anchorXColumn {
                get {
                    return this.columnanchorX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn anchorYColumn {
                get {
                    return this.columnanchorY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sizeScaleColumn {
                get {
                    return this.columnsizeScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lastXColumn {
                get {
                    return this.columnlastX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lastYColumn {
                get {
                    return this.columnlastY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn snapToScaleColumn {
                get {
                    return this.columnsnapToScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn widthColumn {
                get {
                    return this.columnwidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn heightColumn {
                get {
                    return this.columnheight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn scaleXColumn {
                get {
                    return this.columnscaleX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn scaleYColumn {
                get {
                    return this.columnscaleY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn snapToGridColumn {
                get {
                    return this.columnsnapToGrid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isVisibleColumn {
                get {
                    return this.columnisVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn visibleOnlyToOwnerColumn {
                get {
                    return this.columnvisibleOnlyToOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerTypeColumn {
                get {
                    return this.columnownerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tokenShapeColumn {
                get {
                    return this.columntokenShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tokenTypeColumn {
                get {
                    return this.columntokenType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn layerColumn {
                get {
                    return this.columnlayer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn propertyTypeColumn {
                get {
                    return this.columnpropertyType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn facingColumn {
                get {
                    return this.columnfacing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isFlippedXColumn {
                get {
                    return this.columnisFlippedX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isFlippedYColumn {
                get {
                    return this.columnisFlippedY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sightTypeColumn {
                get {
                    return this.columnsightType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hasSightColumn {
                get {
                    return this.columnhasSight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn labelColumn {
                get {
                    return this.columnlabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gmNotesColumn {
                get {
                    return this.columngmNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn speechMapColumn {
                get {
                    return this.columnspeechMap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow this[int index] {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_TokenRowChangeEventHandler _net_rptools_maptool_model_TokenRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_TokenRowChangeEventHandler _net_rptools_maptool_model_TokenRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_TokenRowChangeEventHandler _net_rptools_maptool_model_TokenRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _net_rptools_maptool_model_TokenRowChangeEventHandler _net_rptools_maptool_model_TokenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_net_rptools_maptool_model_TokenRow(_net_rptools_maptool_model_TokenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow Add_net_rptools_maptool_model_TokenRow(
                        string beingImpersonated, 
                        long x, 
                        long y, 
                        long z, 
                        long anchorX, 
                        long anchorY, 
                        decimal sizeScale, 
                        long lastX, 
                        long lastY, 
                        bool snapToScale, 
                        long width, 
                        long height, 
                        decimal scaleX, 
                        decimal scaleY, 
                        bool snapToGrid, 
                        bool isVisible, 
                        bool visibleOnlyToOwner, 
                        string name, 
                        string ownerType, 
                        string tokenShape, 
                        string tokenType, 
                        string layer, 
                        string propertyType, 
                        string facing, 
                        bool isFlippedX, 
                        bool isFlippedY, 
                        string sightType, 
                        bool hasSight, 
                        string label, 
                        string notes, 
                        string gmNotes, 
                        string speechMap) {
                _net_rptools_maptool_model_TokenRow row_net_rptools_maptool_model_TokenRow = ((_net_rptools_maptool_model_TokenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        beingImpersonated,
                        x,
                        y,
                        z,
                        anchorX,
                        anchorY,
                        sizeScale,
                        lastX,
                        lastY,
                        snapToScale,
                        width,
                        height,
                        scaleX,
                        scaleY,
                        snapToGrid,
                        isVisible,
                        visibleOnlyToOwner,
                        name,
                        ownerType,
                        tokenShape,
                        tokenType,
                        layer,
                        propertyType,
                        facing,
                        isFlippedX,
                        isFlippedY,
                        sightType,
                        hasSight,
                        label,
                        notes,
                        gmNotes,
                        speechMap,
                        null};
                row_net_rptools_maptool_model_TokenRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_net_rptools_maptool_model_TokenRow);
                return row_net_rptools_maptool_model_TokenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _net_rptools_maptool_model_TokenDataTable cln = ((_net_rptools_maptool_model_TokenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _net_rptools_maptool_model_TokenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbeingImpersonated = base.Columns["beingImpersonated"];
                this.columnx = base.Columns["x"];
                this.columny = base.Columns["y"];
                this.columnz = base.Columns["z"];
                this.columnanchorX = base.Columns["anchorX"];
                this.columnanchorY = base.Columns["anchorY"];
                this.columnsizeScale = base.Columns["sizeScale"];
                this.columnlastX = base.Columns["lastX"];
                this.columnlastY = base.Columns["lastY"];
                this.columnsnapToScale = base.Columns["snapToScale"];
                this.columnwidth = base.Columns["width"];
                this.columnheight = base.Columns["height"];
                this.columnscaleX = base.Columns["scaleX"];
                this.columnscaleY = base.Columns["scaleY"];
                this.columnsnapToGrid = base.Columns["snapToGrid"];
                this.columnisVisible = base.Columns["isVisible"];
                this.columnvisibleOnlyToOwner = base.Columns["visibleOnlyToOwner"];
                this.columnname = base.Columns["name"];
                this.columnownerType = base.Columns["ownerType"];
                this.columntokenShape = base.Columns["tokenShape"];
                this.columntokenType = base.Columns["tokenType"];
                this.columnlayer = base.Columns["layer"];
                this.columnpropertyType = base.Columns["propertyType"];
                this.columnfacing = base.Columns["facing"];
                this.columnisFlippedX = base.Columns["isFlippedX"];
                this.columnisFlippedY = base.Columns["isFlippedY"];
                this.columnsightType = base.Columns["sightType"];
                this.columnhasSight = base.Columns["hasSight"];
                this.columnlabel = base.Columns["label"];
                this.columnnotes = base.Columns["notes"];
                this.columngmNotes = base.Columns["gmNotes"];
                this.columnspeechMap = base.Columns["speechMap"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbeingImpersonated = new global::System.Data.DataColumn("beingImpersonated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbeingImpersonated);
                this.columnx = new global::System.Data.DataColumn("x", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx);
                this.columny = new global::System.Data.DataColumn("y", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columny);
                this.columnz = new global::System.Data.DataColumn("z", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnz);
                this.columnanchorX = new global::System.Data.DataColumn("anchorX", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanchorX);
                this.columnanchorY = new global::System.Data.DataColumn("anchorY", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanchorY);
                this.columnsizeScale = new global::System.Data.DataColumn("sizeScale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsizeScale);
                this.columnlastX = new global::System.Data.DataColumn("lastX", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastX);
                this.columnlastY = new global::System.Data.DataColumn("lastY", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastY);
                this.columnsnapToScale = new global::System.Data.DataColumn("snapToScale", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsnapToScale);
                this.columnwidth = new global::System.Data.DataColumn("width", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwidth);
                this.columnheight = new global::System.Data.DataColumn("height", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheight);
                this.columnscaleX = new global::System.Data.DataColumn("scaleX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscaleX);
                this.columnscaleY = new global::System.Data.DataColumn("scaleY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscaleY);
                this.columnsnapToGrid = new global::System.Data.DataColumn("snapToGrid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsnapToGrid);
                this.columnisVisible = new global::System.Data.DataColumn("isVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisVisible);
                this.columnvisibleOnlyToOwner = new global::System.Data.DataColumn("visibleOnlyToOwner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisibleOnlyToOwner);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnownerType = new global::System.Data.DataColumn("ownerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerType);
                this.columntokenShape = new global::System.Data.DataColumn("tokenShape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntokenShape);
                this.columntokenType = new global::System.Data.DataColumn("tokenType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntokenType);
                this.columnlayer = new global::System.Data.DataColumn("layer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlayer);
                this.columnpropertyType = new global::System.Data.DataColumn("propertyType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpropertyType);
                this.columnfacing = new global::System.Data.DataColumn("facing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfacing);
                this.columnisFlippedX = new global::System.Data.DataColumn("isFlippedX", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisFlippedX);
                this.columnisFlippedY = new global::System.Data.DataColumn("isFlippedY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisFlippedY);
                this.columnsightType = new global::System.Data.DataColumn("sightType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsightType);
                this.columnhasSight = new global::System.Data.DataColumn("hasSight", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhasSight);
                this.columnlabel = new global::System.Data.DataColumn("label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlabel);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columngmNotes = new global::System.Data.DataColumn("gmNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngmNotes);
                this.columnspeechMap = new global::System.Data.DataColumn("speechMap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspeechMap);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column_net_rptools_maptool_model_Token_Id}, true));
                this.column_net_rptools_maptool_model_Token_Id.AutoIncrement = true;
                this.column_net_rptools_maptool_model_Token_Id.AllowDBNull = false;
                this.column_net_rptools_maptool_model_Token_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow New_net_rptools_maptool_model_TokenRow() {
                return ((_net_rptools_maptool_model_TokenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _net_rptools_maptool_model_TokenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_net_rptools_maptool_model_TokenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._net_rptools_maptool_model_TokenRowChanged != null)) {
                    this._net_rptools_maptool_model_TokenRowChanged(this, new _net_rptools_maptool_model_TokenRowChangeEvent(((_net_rptools_maptool_model_TokenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._net_rptools_maptool_model_TokenRowChanging != null)) {
                    this._net_rptools_maptool_model_TokenRowChanging(this, new _net_rptools_maptool_model_TokenRowChangeEvent(((_net_rptools_maptool_model_TokenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._net_rptools_maptool_model_TokenRowDeleted != null)) {
                    this._net_rptools_maptool_model_TokenRowDeleted(this, new _net_rptools_maptool_model_TokenRowChangeEvent(((_net_rptools_maptool_model_TokenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._net_rptools_maptool_model_TokenRowDeleting != null)) {
                    this._net_rptools_maptool_model_TokenRowDeleting(this, new _net_rptools_maptool_model_TokenRowChangeEvent(((_net_rptools_maptool_model_TokenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_net_rptools_maptool_model_TokenRow(_net_rptools_maptool_model_TokenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_net_rptools_maptool_model_TokenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class idDataTable : global::System.Data.TypedTableBase<idRow> {
            
            private global::System.Data.DataColumn columnbaGUID;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idDataTable() {
                this.TableName = "id";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal idDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected idDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn baGUIDColumn {
                get {
                    return this.columnbaGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idRow this[int index] {
                get {
                    return ((idRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event idRowChangeEventHandler idRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event idRowChangeEventHandler idRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event idRowChangeEventHandler idRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event idRowChangeEventHandler idRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddidRow(idRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idRow AddidRow(string baGUID, _net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_id) {
                idRow rowidRow = ((idRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        baGUID,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_id != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_id[32];
                }
                rowidRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowidRow);
                return rowidRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                idDataTable cln = ((idDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new idDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbaGUID = base.Columns["baGUID"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbaGUID = new global::System.Data.DataColumn("baGUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaGUID);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idRow NewidRow() {
                return ((idRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new idRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(idRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.idRowChanged != null)) {
                    this.idRowChanged(this, new idRowChangeEvent(((idRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.idRowChanging != null)) {
                    this.idRowChanging(this, new idRowChangeEvent(((idRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.idRowDeleted != null)) {
                    this.idRowDeleted(this, new idRowChangeEvent(((idRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.idRowDeleting != null)) {
                    this.idRowDeleting(this, new idRowChangeEvent(((idRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveidRow(idRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "idDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class exposedAreaGUIDDataTable : global::System.Data.TypedTableBase<exposedAreaGUIDRow> {
            
            private global::System.Data.DataColumn columnbaGUID;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDDataTable() {
                this.TableName = "exposedAreaGUID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal exposedAreaGUIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected exposedAreaGUIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn baGUIDColumn {
                get {
                    return this.columnbaGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDRow this[int index] {
                get {
                    return ((exposedAreaGUIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exposedAreaGUIDRowChangeEventHandler exposedAreaGUIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exposedAreaGUIDRowChangeEventHandler exposedAreaGUIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exposedAreaGUIDRowChangeEventHandler exposedAreaGUIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exposedAreaGUIDRowChangeEventHandler exposedAreaGUIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddexposedAreaGUIDRow(exposedAreaGUIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDRow AddexposedAreaGUIDRow(string baGUID, _net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_exposedAreaGUID) {
                exposedAreaGUIDRow rowexposedAreaGUIDRow = ((exposedAreaGUIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        baGUID,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_exposedAreaGUID != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_exposedAreaGUID[32];
                }
                rowexposedAreaGUIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexposedAreaGUIDRow);
                return rowexposedAreaGUIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                exposedAreaGUIDDataTable cln = ((exposedAreaGUIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new exposedAreaGUIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbaGUID = base.Columns["baGUID"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbaGUID = new global::System.Data.DataColumn("baGUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaGUID);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDRow NewexposedAreaGUIDRow() {
                return ((exposedAreaGUIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new exposedAreaGUIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(exposedAreaGUIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.exposedAreaGUIDRowChanged != null)) {
                    this.exposedAreaGUIDRowChanged(this, new exposedAreaGUIDRowChangeEvent(((exposedAreaGUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.exposedAreaGUIDRowChanging != null)) {
                    this.exposedAreaGUIDRowChanging(this, new exposedAreaGUIDRowChangeEvent(((exposedAreaGUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.exposedAreaGUIDRowDeleted != null)) {
                    this.exposedAreaGUIDRowDeleted(this, new exposedAreaGUIDRowChangeEvent(((exposedAreaGUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.exposedAreaGUIDRowDeleting != null)) {
                    this.exposedAreaGUIDRowDeleting(this, new exposedAreaGUIDRowChangeEvent(((exposedAreaGUIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveexposedAreaGUIDRow(exposedAreaGUIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "exposedAreaGUIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class imageAssetMapDataTable : global::System.Data.TypedTableBase<imageAssetMapRow> {
            
            private global::System.Data.DataColumn columnimageAssetMap_Id;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapDataTable() {
                this.TableName = "imageAssetMap";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal imageAssetMapDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected imageAssetMapDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn imageAssetMap_IdColumn {
                get {
                    return this.columnimageAssetMap_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRow this[int index] {
                get {
                    return ((imageAssetMapRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event imageAssetMapRowChangeEventHandler imageAssetMapRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event imageAssetMapRowChangeEventHandler imageAssetMapRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event imageAssetMapRowChangeEventHandler imageAssetMapRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event imageAssetMapRowChangeEventHandler imageAssetMapRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddimageAssetMapRow(imageAssetMapRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRow AddimageAssetMapRow(_net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_imageAssetMap) {
                imageAssetMapRow rowimageAssetMapRow = ((imageAssetMapRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_imageAssetMap != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_imageAssetMap[32];
                }
                rowimageAssetMapRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowimageAssetMapRow);
                return rowimageAssetMapRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                imageAssetMapDataTable cln = ((imageAssetMapDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new imageAssetMapDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnimageAssetMap_Id = base.Columns["imageAssetMap_Id"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnimageAssetMap_Id = new global::System.Data.DataColumn("imageAssetMap_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnimageAssetMap_Id);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnimageAssetMap_Id}, true));
                this.columnimageAssetMap_Id.AutoIncrement = true;
                this.columnimageAssetMap_Id.AllowDBNull = false;
                this.columnimageAssetMap_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRow NewimageAssetMapRow() {
                return ((imageAssetMapRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new imageAssetMapRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(imageAssetMapRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.imageAssetMapRowChanged != null)) {
                    this.imageAssetMapRowChanged(this, new imageAssetMapRowChangeEvent(((imageAssetMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.imageAssetMapRowChanging != null)) {
                    this.imageAssetMapRowChanging(this, new imageAssetMapRowChangeEvent(((imageAssetMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.imageAssetMapRowDeleted != null)) {
                    this.imageAssetMapRowDeleted(this, new imageAssetMapRowChangeEvent(((imageAssetMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.imageAssetMapRowDeleting != null)) {
                    this.imageAssetMapRowDeleting(this, new imageAssetMapRowChangeEvent(((imageAssetMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveimageAssetMapRow(imageAssetMapRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "imageAssetMapDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sizeMapDataTable : global::System.Data.TypedTableBase<sizeMapRow> {
            
            private global::System.Data.DataColumn columnsizeMap_Id;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapDataTable() {
                this.TableName = "sizeMap";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sizeMapDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected sizeMapDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sizeMap_IdColumn {
                get {
                    return this.columnsizeMap_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRow this[int index] {
                get {
                    return ((sizeMapRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sizeMapRowChangeEventHandler sizeMapRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sizeMapRowChangeEventHandler sizeMapRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sizeMapRowChangeEventHandler sizeMapRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sizeMapRowChangeEventHandler sizeMapRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsizeMapRow(sizeMapRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRow AddsizeMapRow(_net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_sizeMap) {
                sizeMapRow rowsizeMapRow = ((sizeMapRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_sizeMap != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_sizeMap[32];
                }
                rowsizeMapRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsizeMapRow);
                return rowsizeMapRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sizeMapDataTable cln = ((sizeMapDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sizeMapDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnsizeMap_Id = base.Columns["sizeMap_Id"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnsizeMap_Id = new global::System.Data.DataColumn("sizeMap_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsizeMap_Id);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnsizeMap_Id}, true));
                this.columnsizeMap_Id.AutoIncrement = true;
                this.columnsizeMap_Id.AllowDBNull = false;
                this.columnsizeMap_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRow NewsizeMapRow() {
                return ((sizeMapRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sizeMapRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sizeMapRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sizeMapRowChanged != null)) {
                    this.sizeMapRowChanged(this, new sizeMapRowChangeEvent(((sizeMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sizeMapRowChanging != null)) {
                    this.sizeMapRowChanging(this, new sizeMapRowChangeEvent(((sizeMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sizeMapRowDeleted != null)) {
                    this.sizeMapRowDeleted(this, new sizeMapRowChangeEvent(((sizeMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sizeMapRowDeleting != null)) {
                    this.sizeMapRowDeleting(this, new sizeMapRowChangeEvent(((sizeMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesizeMapRow(sizeMapRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sizeMapDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ownerListDataTable : global::System.Data.TypedTableBase<ownerListRow> {
            
            private global::System.Data.DataColumn column_string;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListDataTable() {
                this.TableName = "ownerList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ownerListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ownerListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _stringColumn {
                get {
                    return this.column_string;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListRow this[int index] {
                get {
                    return ((ownerListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ownerListRowChangeEventHandler ownerListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ownerListRowChangeEventHandler ownerListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ownerListRowChangeEventHandler ownerListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ownerListRowChangeEventHandler ownerListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddownerListRow(ownerListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListRow AddownerListRow(string _string, _net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_ownerList) {
                ownerListRow rowownerListRow = ((ownerListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        _string,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_ownerList != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_ownerList[32];
                }
                rowownerListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowownerListRow);
                return rowownerListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ownerListDataTable cln = ((ownerListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ownerListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column_string = base.Columns["string"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column_string = new global::System.Data.DataColumn("string", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_string);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListRow NewownerListRow() {
                return ((ownerListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ownerListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ownerListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ownerListRowChanged != null)) {
                    this.ownerListRowChanged(this, new ownerListRowChangeEvent(((ownerListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ownerListRowChanging != null)) {
                    this.ownerListRowChanging(this, new ownerListRowChangeEvent(((ownerListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ownerListRowDeleted != null)) {
                    this.ownerListRowDeleted(this, new ownerListRowChangeEvent(((ownerListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ownerListRowDeleting != null)) {
                    this.ownerListRowDeleting(this, new ownerListRowChangeEvent(((ownerListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveownerListRow(ownerListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ownerListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class portraitImageDataTable : global::System.Data.TypedTableBase<portraitImageRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageDataTable() {
                this.TableName = "portraitImage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal portraitImageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected portraitImageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageRow this[int index] {
                get {
                    return ((portraitImageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event portraitImageRowChangeEventHandler portraitImageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event portraitImageRowChangeEventHandler portraitImageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event portraitImageRowChangeEventHandler portraitImageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event portraitImageRowChangeEventHandler portraitImageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddportraitImageRow(portraitImageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageRow AddportraitImageRow(string id, _net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_portraitImage) {
                portraitImageRow rowportraitImageRow = ((portraitImageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_portraitImage != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_portraitImage[32];
                }
                rowportraitImageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowportraitImageRow);
                return rowportraitImageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                portraitImageDataTable cln = ((portraitImageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new portraitImageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageRow NewportraitImageRow() {
                return ((portraitImageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new portraitImageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(portraitImageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.portraitImageRowChanged != null)) {
                    this.portraitImageRowChanged(this, new portraitImageRowChangeEvent(((portraitImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.portraitImageRowChanging != null)) {
                    this.portraitImageRowChanging(this, new portraitImageRowChangeEvent(((portraitImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.portraitImageRowDeleted != null)) {
                    this.portraitImageRowDeleted(this, new portraitImageRowChangeEvent(((portraitImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.portraitImageRowDeleting != null)) {
                    this.portraitImageRowDeleting(this, new portraitImageRowChangeEvent(((portraitImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveportraitImageRow(portraitImageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "portraitImageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stateDataTable : global::System.Data.TypedTableBase<stateRow> {
            
            private global::System.Data.DataColumn columnstate_Id;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateDataTable() {
                this.TableName = "state";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal stateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected stateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn state_IdColumn {
                get {
                    return this.columnstate_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRow this[int index] {
                get {
                    return ((stateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event stateRowChangeEventHandler stateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event stateRowChangeEventHandler stateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event stateRowChangeEventHandler stateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event stateRowChangeEventHandler stateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddstateRow(stateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRow AddstateRow(_net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_state) {
                stateRow rowstateRow = ((stateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_state != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_state[32];
                }
                rowstateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstateRow);
                return rowstateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                stateDataTable cln = ((stateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstate_Id = base.Columns["state_Id"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstate_Id = new global::System.Data.DataColumn("state_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnstate_Id);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstate_Id}, true));
                this.columnstate_Id.AutoIncrement = true;
                this.columnstate_Id.AllowDBNull = false;
                this.columnstate_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRow NewstateRow() {
                return ((stateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(stateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stateRowChanged != null)) {
                    this.stateRowChanged(this, new stateRowChangeEvent(((stateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stateRowChanging != null)) {
                    this.stateRowChanging(this, new stateRowChangeEvent(((stateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stateRowDeleted != null)) {
                    this.stateRowDeleted(this, new stateRowChangeEvent(((stateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stateRowDeleting != null)) {
                    this.stateRowDeleting(this, new stateRowChangeEvent(((stateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovestateRow(stateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class propertyMapCIDataTable : global::System.Data.TypedTableBase<propertyMapCIRow> {
            
            private global::System.Data.DataColumn columnpropertyMapCI_Id;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIDataTable() {
                this.TableName = "propertyMapCI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal propertyMapCIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected propertyMapCIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn propertyMapCI_IdColumn {
                get {
                    return this.columnpropertyMapCI_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRow this[int index] {
                get {
                    return ((propertyMapCIRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event propertyMapCIRowChangeEventHandler propertyMapCIRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event propertyMapCIRowChangeEventHandler propertyMapCIRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event propertyMapCIRowChangeEventHandler propertyMapCIRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event propertyMapCIRowChangeEventHandler propertyMapCIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddpropertyMapCIRow(propertyMapCIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRow AddpropertyMapCIRow(_net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_propertyMapCI) {
                propertyMapCIRow rowpropertyMapCIRow = ((propertyMapCIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_propertyMapCI != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_propertyMapCI[32];
                }
                rowpropertyMapCIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpropertyMapCIRow);
                return rowpropertyMapCIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                propertyMapCIDataTable cln = ((propertyMapCIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new propertyMapCIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpropertyMapCI_Id = base.Columns["propertyMapCI_Id"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpropertyMapCI_Id = new global::System.Data.DataColumn("propertyMapCI_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpropertyMapCI_Id);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpropertyMapCI_Id}, true));
                this.columnpropertyMapCI_Id.AutoIncrement = true;
                this.columnpropertyMapCI_Id.AllowDBNull = false;
                this.columnpropertyMapCI_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRow NewpropertyMapCIRow() {
                return ((propertyMapCIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new propertyMapCIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(propertyMapCIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.propertyMapCIRowChanged != null)) {
                    this.propertyMapCIRowChanged(this, new propertyMapCIRowChangeEvent(((propertyMapCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.propertyMapCIRowChanging != null)) {
                    this.propertyMapCIRowChanging(this, new propertyMapCIRowChangeEvent(((propertyMapCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.propertyMapCIRowDeleted != null)) {
                    this.propertyMapCIRowDeleted(this, new propertyMapCIRowChangeEvent(((propertyMapCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.propertyMapCIRowDeleting != null)) {
                    this.propertyMapCIRowDeleting(this, new propertyMapCIRowChangeEvent(((propertyMapCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovepropertyMapCIRow(propertyMapCIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "propertyMapCIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class storeDataTable : global::System.Data.TypedTableBase<storeRow> {
            
            private global::System.Data.DataColumn columnstore_Id;
            
            private global::System.Data.DataColumn columnpropertyMapCI_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeDataTable() {
                this.TableName = "store";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal storeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected storeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn store_IdColumn {
                get {
                    return this.columnstore_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn propertyMapCI_IdColumn {
                get {
                    return this.columnpropertyMapCI_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRow this[int index] {
                get {
                    return ((storeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event storeRowChangeEventHandler storeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event storeRowChangeEventHandler storeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event storeRowChangeEventHandler storeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event storeRowChangeEventHandler storeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddstoreRow(storeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRow AddstoreRow(propertyMapCIRow parentpropertyMapCIRowBypropertyMapCI_store) {
                storeRow rowstoreRow = ((storeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentpropertyMapCIRowBypropertyMapCI_store != null)) {
                    columnValuesArray[1] = parentpropertyMapCIRowBypropertyMapCI_store[0];
                }
                rowstoreRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstoreRow);
                return rowstoreRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                storeDataTable cln = ((storeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new storeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstore_Id = base.Columns["store_Id"];
                this.columnpropertyMapCI_Id = base.Columns["propertyMapCI_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstore_Id = new global::System.Data.DataColumn("store_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnstore_Id);
                this.columnpropertyMapCI_Id = new global::System.Data.DataColumn("propertyMapCI_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpropertyMapCI_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstore_Id}, true));
                this.columnstore_Id.AutoIncrement = true;
                this.columnstore_Id.AllowDBNull = false;
                this.columnstore_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRow NewstoreRow() {
                return ((storeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new storeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(storeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.storeRowChanged != null)) {
                    this.storeRowChanged(this, new storeRowChangeEvent(((storeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.storeRowChanging != null)) {
                    this.storeRowChanging(this, new storeRowChangeEvent(((storeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.storeRowDeleted != null)) {
                    this.storeRowDeleted(this, new storeRowChangeEvent(((storeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.storeRowDeleting != null)) {
                    this.storeRowDeleting(this, new storeRowChangeEvent(((storeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovestoreRow(storeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "storeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class macroPropertiesMapDataTable : global::System.Data.TypedTableBase<macroPropertiesMapRow> {
            
            private global::System.Data.DataColumn columnmacroPropertiesMap_Id;
            
            private global::System.Data.DataColumn column_net_rptools_maptool_model_Token_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapDataTable() {
                this.TableName = "macroPropertiesMap";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal macroPropertiesMapDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected macroPropertiesMapDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn macroPropertiesMap_IdColumn {
                get {
                    return this.columnmacroPropertiesMap_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _net_rptools_maptool_model_Token_IdColumn {
                get {
                    return this.column_net_rptools_maptool_model_Token_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRow this[int index] {
                get {
                    return ((macroPropertiesMapRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event macroPropertiesMapRowChangeEventHandler macroPropertiesMapRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event macroPropertiesMapRowChangeEventHandler macroPropertiesMapRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event macroPropertiesMapRowChangeEventHandler macroPropertiesMapRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event macroPropertiesMapRowChangeEventHandler macroPropertiesMapRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmacroPropertiesMapRow(macroPropertiesMapRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRow AddmacroPropertiesMapRow(_net_rptools_maptool_model_TokenRow _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_macroPropertiesMap) {
                macroPropertiesMapRow rowmacroPropertiesMapRow = ((macroPropertiesMapRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_macroPropertiesMap != null)) {
                    columnValuesArray[1] = _parent_net_rptools_maptool_model_TokenRowBynet_rptools_maptool_model_Token_macroPropertiesMap[32];
                }
                rowmacroPropertiesMapRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmacroPropertiesMapRow);
                return rowmacroPropertiesMapRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                macroPropertiesMapDataTable cln = ((macroPropertiesMapDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new macroPropertiesMapDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnmacroPropertiesMap_Id = base.Columns["macroPropertiesMap_Id"];
                this.column_net_rptools_maptool_model_Token_Id = base.Columns["net.rptools.maptool.model.Token_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnmacroPropertiesMap_Id = new global::System.Data.DataColumn("macroPropertiesMap_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmacroPropertiesMap_Id);
                this.column_net_rptools_maptool_model_Token_Id = new global::System.Data.DataColumn("net.rptools.maptool.model.Token_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.column_net_rptools_maptool_model_Token_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmacroPropertiesMap_Id}, true));
                this.columnmacroPropertiesMap_Id.AutoIncrement = true;
                this.columnmacroPropertiesMap_Id.AllowDBNull = false;
                this.columnmacroPropertiesMap_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRow NewmacroPropertiesMapRow() {
                return ((macroPropertiesMapRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new macroPropertiesMapRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(macroPropertiesMapRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.macroPropertiesMapRowChanged != null)) {
                    this.macroPropertiesMapRowChanged(this, new macroPropertiesMapRowChangeEvent(((macroPropertiesMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.macroPropertiesMapRowChanging != null)) {
                    this.macroPropertiesMapRowChanging(this, new macroPropertiesMapRowChangeEvent(((macroPropertiesMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.macroPropertiesMapRowDeleted != null)) {
                    this.macroPropertiesMapRowDeleted(this, new macroPropertiesMapRowChangeEvent(((macroPropertiesMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.macroPropertiesMapRowDeleting != null)) {
                    this.macroPropertiesMapRowDeleting(this, new macroPropertiesMapRowChangeEvent(((macroPropertiesMapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemacroPropertiesMapRow(macroPropertiesMapRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "macroPropertiesMapDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class entryRow : global::System.Data.DataRow {
            
            private entryDataTable tableentry;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal entryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableentry = ((entryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _null {
                get {
                    try {
                        return ((string)(this[this.tableentry._nullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'null\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry._nullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _java_class {
                get {
                    try {
                        return ((string)(this[this.tableentry._java_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'java-class\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry._java_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _string {
                get {
                    try {
                        return ((string)(this[this.tableentry._stringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'string\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry._stringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string boolean {
                get {
                    try {
                        return ((string)(this[this.tableentry.booleanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'boolean\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry.booleanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _int {
                get {
                    try {
                        return ((string)(this[this.tableentry._intColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'int\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry._intColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int entry_Id {
                get {
                    return ((int)(this[this.tableentry.entry_IdColumn]));
                }
                set {
                    this[this.tableentry.entry_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int imageAssetMap_Id {
                get {
                    try {
                        return ((int)(this[this.tableentry.imageAssetMap_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'imageAssetMap_Id\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry.imageAssetMap_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sizeMap_Id {
                get {
                    try {
                        return ((int)(this[this.tableentry.sizeMap_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sizeMap_Id\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry.sizeMap_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int state_Id {
                get {
                    try {
                        return ((int)(this[this.tableentry.state_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state_Id\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry.state_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int store_Id {
                get {
                    try {
                        return ((int)(this[this.tableentry.store_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'store_Id\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry.store_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int macroPropertiesMap_Id {
                get {
                    try {
                        return ((int)(this[this.tableentry.macroPropertiesMap_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'macroPropertiesMap_Id\' in table \'entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableentry.macroPropertiesMap_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRow imageAssetMapRow {
                get {
                    return ((imageAssetMapRow)(this.GetParentRow(this.Table.ParentRelations["imageAssetMap_entry"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["imageAssetMap_entry"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRow sizeMapRow {
                get {
                    return ((sizeMapRow)(this.GetParentRow(this.Table.ParentRelations["sizeMap_entry"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sizeMap_entry"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRow stateRow {
                get {
                    return ((stateRow)(this.GetParentRow(this.Table.ParentRelations["state_entry"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["state_entry"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRow storeRow {
                get {
                    return ((storeRow)(this.GetParentRow(this.Table.ParentRelations["store_entry"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["store_entry"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRow macroPropertiesMapRow {
                get {
                    return ((macroPropertiesMapRow)(this.GetParentRow(this.Table.ParentRelations["macroPropertiesMap_entry"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["macroPropertiesMap_entry"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_nullNull() {
                return this.IsNull(this.tableentry._nullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_nullNull() {
                this[this.tableentry._nullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_java_classNull() {
                return this.IsNull(this.tableentry._java_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_java_classNull() {
                this[this.tableentry._java_classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_stringNull() {
                return this.IsNull(this.tableentry._stringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_stringNull() {
                this[this.tableentry._stringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbooleanNull() {
                return this.IsNull(this.tableentry.booleanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbooleanNull() {
                this[this.tableentry.booleanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_intNull() {
                return this.IsNull(this.tableentry._intColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_intNull() {
                this[this.tableentry._intColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsimageAssetMap_IdNull() {
                return this.IsNull(this.tableentry.imageAssetMap_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetimageAssetMap_IdNull() {
                this[this.tableentry.imageAssetMap_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssizeMap_IdNull() {
                return this.IsNull(this.tableentry.sizeMap_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsizeMap_IdNull() {
                this[this.tableentry.sizeMap_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstate_IdNull() {
                return this.IsNull(this.tableentry.state_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstate_IdNull() {
                this[this.tableentry.state_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstore_IdNull() {
                return this.IsNull(this.tableentry.store_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstore_IdNull() {
                this[this.tableentry.store_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmacroPropertiesMap_IdNull() {
                return this.IsNull(this.tableentry.macroPropertiesMap_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmacroPropertiesMap_IdNull() {
                this[this.tableentry.macroPropertiesMap_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyRow[] _Getnet_rptools_lib_MD5KeyRows() {
                if ((this.Table.ChildRelations["entry_net.rptools.lib.MD5Key"] == null)) {
                    return new _net_rptools_lib_MD5KeyRow[0];
                }
                else {
                    return ((_net_rptools_lib_MD5KeyRow[])(base.GetChildRows(this.Table.ChildRelations["entry_net.rptools.lib.MD5Key"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDRow[] _Getnet_rptools_maptool_model_GUIDRows() {
                if ((this.Table.ChildRelations["entry_net.rptools.maptool.model.GUID"] == null)) {
                    return new _net_rptools_maptool_model_GUIDRow[0];
                }
                else {
                    return ((_net_rptools_maptool_model_GUIDRow[])(base.GetChildRows(this.Table.ChildRelations["entry_net.rptools.maptool.model.GUID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow[] _Getnet_rptools_CaseInsensitiveHashMap__KeyValueRows() {
                if ((this.Table.ChildRelations["entry_net.rptools.CaseInsensitiveHashMap_-KeyValue"] == null)) {
                    return new _net_rptools_CaseInsensitiveHashMap__KeyValueRow[0];
                }
                else {
                    return ((_net_rptools_CaseInsensitiveHashMap__KeyValueRow[])(base.GetChildRows(this.Table.ChildRelations["entry_net.rptools.CaseInsensitiveHashMap_-KeyValue"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesRow[] _Getnet_rptools_maptool_model_MacroButtonPropertiesRows() {
                if ((this.Table.ChildRelations["entry_net.rptools.maptool.model.MacroButtonProperties"] == null)) {
                    return new _net_rptools_maptool_model_MacroButtonPropertiesRow[0];
                }
                else {
                    return ((_net_rptools_maptool_model_MacroButtonPropertiesRow[])(base.GetChildRows(this.Table.ChildRelations["entry_net.rptools.maptool.model.MacroButtonProperties"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _net_rptools_lib_MD5KeyRow : global::System.Data.DataRow {
            
            private _net_rptools_lib_MD5KeyDataTable table_net_rptools_lib_MD5Key;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_lib_MD5KeyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_net_rptools_lib_MD5Key = ((_net_rptools_lib_MD5KeyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_lib_MD5Key.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'net.rptools.lib.MD5Key\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_lib_MD5Key.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int entry_Id {
                get {
                    try {
                        return ((int)(this[this.table_net_rptools_lib_MD5Key.entry_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'entry_Id\' in table \'net.rptools.lib.MD5Key\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_lib_MD5Key.entry_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow entryRow {
                get {
                    return ((entryRow)(this.GetParentRow(this.Table.ParentRelations["entry_net.rptools.lib.MD5Key"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["entry_net.rptools.lib.MD5Key"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidNull() {
                return this.IsNull(this.table_net_rptools_lib_MD5Key.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNull() {
                this[this.table_net_rptools_lib_MD5Key.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isentry_IdNull() {
                return this.IsNull(this.table_net_rptools_lib_MD5Key.entry_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setentry_IdNull() {
                this[this.table_net_rptools_lib_MD5Key.entry_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _net_rptools_maptool_model_GUIDRow : global::System.Data.DataRow {
            
            private _net_rptools_maptool_model_GUIDDataTable table_net_rptools_maptool_model_GUID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_maptool_model_GUIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_net_rptools_maptool_model_GUID = ((_net_rptools_maptool_model_GUIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string baGUID {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_GUID.baGUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baGUID\' in table \'net.rptools.maptool.model.GUID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_GUID.baGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int entry_Id {
                get {
                    try {
                        return ((int)(this[this.table_net_rptools_maptool_model_GUID.entry_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'entry_Id\' in table \'net.rptools.maptool.model.GUID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_GUID.entry_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow entryRow {
                get {
                    return ((entryRow)(this.GetParentRow(this.Table.ParentRelations["entry_net.rptools.maptool.model.GUID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["entry_net.rptools.maptool.model.GUID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbaGUIDNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_GUID.baGUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbaGUIDNull() {
                this[this.table_net_rptools_maptool_model_GUID.baGUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isentry_IdNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_GUID.entry_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setentry_IdNull() {
                this[this.table_net_rptools_maptool_model_GUID.entry_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _net_rptools_CaseInsensitiveHashMap__KeyValueRow : global::System.Data.DataRow {
            
            private _net_rptools_CaseInsensitiveHashMap__KeyValueDataTable table_net_rptools_CaseInsensitiveHashMap__KeyValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_CaseInsensitiveHashMap__KeyValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_net_rptools_CaseInsensitiveHashMap__KeyValue = ((_net_rptools_CaseInsensitiveHashMap__KeyValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string key {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.keyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'key\' in table \'net.rptools.CaseInsensitiveHashMap_-KeyValue" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.keyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_CaseInsensitiveHashMap__KeyValue_Id {
                get {
                    return ((int)(this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn]));
                }
                set {
                    this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int entry_Id {
                get {
                    try {
                        return ((int)(this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.entry_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'entry_Id\' in table \'net.rptools.CaseInsensitiveHashMap_-Key" +
                                "Value\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.entry_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow entryRow {
                get {
                    return ((entryRow)(this.GetParentRow(this.Table.ParentRelations["entry_net.rptools.CaseInsensitiveHashMap_-KeyValue"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["entry_net.rptools.CaseInsensitiveHashMap_-KeyValue"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskeyNull() {
                return this.IsNull(this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.keyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkeyNull() {
                this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.keyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isentry_IdNull() {
                return this.IsNull(this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.entry_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setentry_IdNull() {
                this[this.table_net_rptools_CaseInsensitiveHashMap__KeyValue.entry_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueRow[] GetvalueRows() {
                if ((this.Table.ChildRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_value"] == null)) {
                    return new valueRow[0];
                }
                else {
                    return ((valueRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_value"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classRow[] _Getouter_classRows() {
                if ((this.Table.ChildRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class"] == null)) {
                    return new _outer_classRow[0];
                }
                else {
                    return ((_outer_classRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class valueRow : global::System.Data.DataRow {
            
            private valueDataTable tablevalue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal valueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevalue = ((valueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _class {
                get {
                    try {
                        return ((string)(this[this.tablevalue._classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'class\' in table \'value\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalue._classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string value_Text {
                get {
                    try {
                        return ((string)(this[this.tablevalue.value_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'value_Text\' in table \'value\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalue.value_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_CaseInsensitiveHashMap__KeyValue_Id {
                get {
                    try {
                        return ((int)(this[this.tablevalue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.CaseInsensitiveHashMap_-KeyValue_Id\' in table \'" +
                                "value\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow _net_rptools_CaseInsensitiveHashMap__KeyValueRow {
                get {
                    return ((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_value"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_value"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_classNull() {
                return this.IsNull(this.tablevalue._classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_classNull() {
                this[this.tablevalue._classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvalue_TextNull() {
                return this.IsNull(this.tablevalue.value_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvalue_TextNull() {
                this[this.tablevalue.value_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_CaseInsensitiveHashMap__KeyValue_IdNull() {
                return this.IsNull(this.tablevalue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_CaseInsensitiveHashMap__KeyValue_IdNull() {
                this[this.tablevalue._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _outer_classRow : global::System.Data.DataRow {
            
            private _outer_classDataTable table_outer_class;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _outer_classRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_outer_class = ((_outer_classDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reference {
                get {
                    try {
                        return ((string)(this[this.table_outer_class.referenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reference\' in table \'outer-class\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_outer_class.referenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_CaseInsensitiveHashMap__KeyValue_Id {
                get {
                    try {
                        return ((int)(this[this.table_outer_class._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.CaseInsensitiveHashMap_-KeyValue_Id\' in table \'" +
                                "outer-class\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_outer_class._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow _net_rptools_CaseInsensitiveHashMap__KeyValueRow {
                get {
                    return ((_net_rptools_CaseInsensitiveHashMap__KeyValueRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.CaseInsensitiveHashMap_-KeyValue_outer-class"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreferenceNull() {
                return this.IsNull(this.table_outer_class.referenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreferenceNull() {
                this[this.table_outer_class.referenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_CaseInsensitiveHashMap__KeyValue_IdNull() {
                return this.IsNull(this.table_outer_class._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_CaseInsensitiveHashMap__KeyValue_IdNull() {
                this[this.table_outer_class._net_rptools_CaseInsensitiveHashMap__KeyValue_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _net_rptools_maptool_model_MacroButtonPropertiesRow : global::System.Data.DataRow {
            
            private _net_rptools_maptool_model_MacroButtonPropertiesDataTable table_net_rptools_maptool_model_MacroButtonProperties;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_maptool_model_MacroButtonPropertiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_net_rptools_maptool_model_MacroButtonProperties = ((_net_rptools_maptool_model_MacroButtonPropertiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string saveLocation {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.saveLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saveLocation\' in table \'net.rptools.maptool.model.MacroButt" +
                                "onProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.saveLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string index {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.indexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'index\' in table \'net.rptools.maptool.model.MacroButtonPrope" +
                                "rties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.indexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string colorKey {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.colorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'colorKey\' in table \'net.rptools.maptool.model.MacroButtonPr" +
                                "operties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.colorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hotKey {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.hotKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hotKey\' in table \'net.rptools.maptool.model.MacroButtonProp" +
                                "erties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.hotKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string command {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.commandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'command\' in table \'net.rptools.maptool.model.MacroButtonPro" +
                                "perties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.commandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string label {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.labelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'label\' in table \'net.rptools.maptool.model.MacroButtonPrope" +
                                "rties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.labelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string group {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.groupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'group\' in table \'net.rptools.maptool.model.MacroButtonPrope" +
                                "rties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.groupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sortby {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.sortbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sortby\' in table \'net.rptools.maptool.model.MacroButtonProp" +
                                "erties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.sortbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string autoExecute {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.autoExecuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'autoExecute\' in table \'net.rptools.maptool.model.MacroButto" +
                                "nProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.autoExecuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string includeLabel {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.includeLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'includeLabel\' in table \'net.rptools.maptool.model.MacroButt" +
                                "onProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.includeLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string applyToTokens {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.applyToTokensColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'applyToTokens\' in table \'net.rptools.maptool.model.MacroBut" +
                                "tonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.applyToTokensColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fontColorKey {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.fontColorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fontColorKey\' in table \'net.rptools.maptool.model.MacroButt" +
                                "onProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.fontColorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fontSize {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.fontSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fontSize\' in table \'net.rptools.maptool.model.MacroButtonPr" +
                                "operties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.fontSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string minWidth {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.minWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'minWidth\' in table \'net.rptools.maptool.model.MacroButtonPr" +
                                "operties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.minWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string maxWidth {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.maxWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxWidth\' in table \'net.rptools.maptool.model.MacroButtonPr" +
                                "operties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.maxWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string allowPlayerEdits {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.allowPlayerEditsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'allowPlayerEdits\' in table \'net.rptools.maptool.model.Macro" +
                                "ButtonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.allowPlayerEditsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string toolTip {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.toolTipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'toolTip\' in table \'net.rptools.maptool.model.MacroButtonPro" +
                                "perties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.toolTipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commonMacro {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.commonMacroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commonMacro\' in table \'net.rptools.maptool.model.MacroButto" +
                                "nProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.commonMacroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string compareGroup {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compareGroup\' in table \'net.rptools.maptool.model.MacroButt" +
                                "onProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string compareSortPrefix {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareSortPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compareSortPrefix\' in table \'net.rptools.maptool.model.Macr" +
                                "oButtonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareSortPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string compareCommand {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareCommandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compareCommand\' in table \'net.rptools.maptool.model.MacroBu" +
                                "ttonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareCommandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string compareIncludeLabel {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareIncludeLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compareIncludeLabel\' in table \'net.rptools.maptool.model.Ma" +
                                "croButtonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareIncludeLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string compareAutoExecute {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareAutoExecuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compareAutoExecute\' in table \'net.rptools.maptool.model.Mac" +
                                "roButtonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareAutoExecuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string compareApplyToSelectedTokens {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareApplyToSelectedTokensColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compareApplyToSelectedTokens\' in table \'net.rptools.maptool" +
                                ".model.MacroButtonProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareApplyToSelectedTokensColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int entry_Id {
                get {
                    try {
                        return ((int)(this[this.table_net_rptools_maptool_model_MacroButtonProperties.entry_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'entry_Id\' in table \'net.rptools.maptool.model.MacroButtonPr" +
                                "operties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_MacroButtonProperties.entry_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow entryRow {
                get {
                    return ((entryRow)(this.GetParentRow(this.Table.ParentRelations["entry_net.rptools.maptool.model.MacroButtonProperties"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["entry_net.rptools.maptool.model.MacroButtonProperties"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssaveLocationNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.saveLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsaveLocationNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.saveLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsindexNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.indexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetindexNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.indexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscolorKeyNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.colorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcolorKeyNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.colorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshotKeyNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.hotKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethotKeyNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.hotKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommandNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.commandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommandNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.commandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslabelNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.labelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlabelNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.labelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgroupNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.groupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgroupNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.groupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssortbyNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.sortbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsortbyNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.sortbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsautoExecuteNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.autoExecuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetautoExecuteNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.autoExecuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsincludeLabelNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.includeLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetincludeLabelNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.includeLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsapplyToTokensNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.applyToTokensColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetapplyToTokensNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.applyToTokensColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfontColorKeyNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.fontColorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfontColorKeyNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.fontColorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfontSizeNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.fontSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfontSizeNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.fontSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsminWidthNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.minWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetminWidthNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.minWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmaxWidthNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.maxWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmaxWidthNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.maxWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsallowPlayerEditsNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.allowPlayerEditsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetallowPlayerEditsNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.allowPlayerEditsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstoolTipNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.toolTipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettoolTipNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.toolTipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommonMacroNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.commonMacroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommonMacroNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.commonMacroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompareGroupNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.compareGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompareGroupNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompareSortPrefixNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.compareSortPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompareSortPrefixNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareSortPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompareCommandNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.compareCommandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompareCommandNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareCommandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompareIncludeLabelNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.compareIncludeLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompareIncludeLabelNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareIncludeLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompareAutoExecuteNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.compareAutoExecuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompareAutoExecuteNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareAutoExecuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompareApplyToSelectedTokensNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.compareApplyToSelectedTokensColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompareApplyToSelectedTokensNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.compareApplyToSelectedTokensColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isentry_IdNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_MacroButtonProperties.entry_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setentry_IdNull() {
                this[this.table_net_rptools_maptool_model_MacroButtonProperties.entry_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _net_rptools_maptool_model_TokenRow : global::System.Data.DataRow {
            
            private _net_rptools_maptool_model_TokenDataTable table_net_rptools_maptool_model_Token;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _net_rptools_maptool_model_TokenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_net_rptools_maptool_model_Token = ((_net_rptools_maptool_model_TokenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string beingImpersonated {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.beingImpersonatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'beingImpersonated\' in table \'net.rptools.maptool.model.Toke" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.beingImpersonatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long x {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'x\' in table \'net.rptools.maptool.model.Token\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long y {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'y\' in table \'net.rptools.maptool.model.Token\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long z {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'z\' in table \'net.rptools.maptool.model.Token\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long anchorX {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.anchorXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anchorX\' in table \'net.rptools.maptool.model.Token\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.anchorXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long anchorY {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.anchorYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anchorY\' in table \'net.rptools.maptool.model.Token\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.anchorYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal sizeScale {
                get {
                    try {
                        return ((decimal)(this[this.table_net_rptools_maptool_model_Token.sizeScaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sizeScale\' in table \'net.rptools.maptool.model.Token\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.sizeScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long lastX {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.lastXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastX\' in table \'net.rptools.maptool.model.Token\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.lastXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long lastY {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.lastYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastY\' in table \'net.rptools.maptool.model.Token\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.lastYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool snapToScale {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.snapToScaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'snapToScale\' in table \'net.rptools.maptool.model.Token\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.snapToScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long width {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.widthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'width\' in table \'net.rptools.maptool.model.Token\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.widthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long height {
                get {
                    try {
                        return ((long)(this[this.table_net_rptools_maptool_model_Token.heightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'height\' in table \'net.rptools.maptool.model.Token\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.heightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal scaleX {
                get {
                    try {
                        return ((decimal)(this[this.table_net_rptools_maptool_model_Token.scaleXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'scaleX\' in table \'net.rptools.maptool.model.Token\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.scaleXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal scaleY {
                get {
                    try {
                        return ((decimal)(this[this.table_net_rptools_maptool_model_Token.scaleYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'scaleY\' in table \'net.rptools.maptool.model.Token\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.scaleYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool snapToGrid {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.snapToGridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'snapToGrid\' in table \'net.rptools.maptool.model.Token\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.snapToGridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isVisible {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.isVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isVisible\' in table \'net.rptools.maptool.model.Token\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.isVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool visibleOnlyToOwner {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.visibleOnlyToOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visibleOnlyToOwner\' in table \'net.rptools.maptool.model.Tok" +
                                "en\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.visibleOnlyToOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'net.rptools.maptool.model.Token\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerType {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.ownerTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerType\' in table \'net.rptools.maptool.model.Token\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.ownerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tokenShape {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.tokenShapeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tokenShape\' in table \'net.rptools.maptool.model.Token\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.tokenShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tokenType {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.tokenTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tokenType\' in table \'net.rptools.maptool.model.Token\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.tokenTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string layer {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.layerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'layer\' in table \'net.rptools.maptool.model.Token\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.layerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string propertyType {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.propertyTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'propertyType\' in table \'net.rptools.maptool.model.Token\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.propertyTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string facing {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.facingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'facing\' in table \'net.rptools.maptool.model.Token\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.facingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isFlippedX {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.isFlippedXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isFlippedX\' in table \'net.rptools.maptool.model.Token\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.isFlippedXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isFlippedY {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.isFlippedYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isFlippedY\' in table \'net.rptools.maptool.model.Token\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.isFlippedYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sightType {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.sightTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sightType\' in table \'net.rptools.maptool.model.Token\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.sightTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool hasSight {
                get {
                    try {
                        return ((bool)(this[this.table_net_rptools_maptool_model_Token.hasSightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hasSight\' in table \'net.rptools.maptool.model.Token\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.hasSightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string label {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.labelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'label\' in table \'net.rptools.maptool.model.Token\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.labelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'net.rptools.maptool.model.Token\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gmNotes {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.gmNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gmNotes\' in table \'net.rptools.maptool.model.Token\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.gmNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string speechMap {
                get {
                    try {
                        return ((string)(this[this.table_net_rptools_maptool_model_Token.speechMapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'speechMap\' in table \'net.rptools.maptool.model.Token\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token.speechMapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    return ((int)(this[this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn]));
                }
                set {
                    this[this.table_net_rptools_maptool_model_Token._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbeingImpersonatedNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.beingImpersonatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbeingImpersonatedNull() {
                this[this.table_net_rptools_maptool_model_Token.beingImpersonatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxNull() {
                this[this.table_net_rptools_maptool_model_Token.xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsyNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetyNull() {
                this[this.table_net_rptools_maptool_model_Token.yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzNull() {
                this[this.table_net_rptools_maptool_model_Token.zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsanchorXNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.anchorXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetanchorXNull() {
                this[this.table_net_rptools_maptool_model_Token.anchorXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsanchorYNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.anchorYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetanchorYNull() {
                this[this.table_net_rptools_maptool_model_Token.anchorYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssizeScaleNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.sizeScaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsizeScaleNull() {
                this[this.table_net_rptools_maptool_model_Token.sizeScaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslastXNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.lastXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlastXNull() {
                this[this.table_net_rptools_maptool_model_Token.lastXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslastYNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.lastYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlastYNull() {
                this[this.table_net_rptools_maptool_model_Token.lastYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssnapToScaleNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.snapToScaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsnapToScaleNull() {
                this[this.table_net_rptools_maptool_model_Token.snapToScaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IswidthNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.widthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetwidthNull() {
                this[this.table_net_rptools_maptool_model_Token.widthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsheightNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.heightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetheightNull() {
                this[this.table_net_rptools_maptool_model_Token.heightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsscaleXNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.scaleXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetscaleXNull() {
                this[this.table_net_rptools_maptool_model_Token.scaleXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsscaleYNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.scaleYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetscaleYNull() {
                this[this.table_net_rptools_maptool_model_Token.scaleYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssnapToGridNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.snapToGridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsnapToGridNull() {
                this[this.table_net_rptools_maptool_model_Token.snapToGridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisVisibleNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.isVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisVisibleNull() {
                this[this.table_net_rptools_maptool_model_Token.isVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsvisibleOnlyToOwnerNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.visibleOnlyToOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetvisibleOnlyToOwnerNull() {
                this[this.table_net_rptools_maptool_model_Token.visibleOnlyToOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull() {
                this[this.table_net_rptools_maptool_model_Token.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerTypeNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.ownerTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerTypeNull() {
                this[this.table_net_rptools_maptool_model_Token.ownerTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstokenShapeNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.tokenShapeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettokenShapeNull() {
                this[this.table_net_rptools_maptool_model_Token.tokenShapeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstokenTypeNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.tokenTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettokenTypeNull() {
                this[this.table_net_rptools_maptool_model_Token.tokenTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslayerNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.layerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlayerNull() {
                this[this.table_net_rptools_maptool_model_Token.layerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspropertyTypeNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.propertyTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpropertyTypeNull() {
                this[this.table_net_rptools_maptool_model_Token.propertyTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfacingNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.facingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfacingNull() {
                this[this.table_net_rptools_maptool_model_Token.facingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisFlippedXNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.isFlippedXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisFlippedXNull() {
                this[this.table_net_rptools_maptool_model_Token.isFlippedXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisFlippedYNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.isFlippedYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisFlippedYNull() {
                this[this.table_net_rptools_maptool_model_Token.isFlippedYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssightTypeNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.sightTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsightTypeNull() {
                this[this.table_net_rptools_maptool_model_Token.sightTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshasSightNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.hasSightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethasSightNull() {
                this[this.table_net_rptools_maptool_model_Token.hasSightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslabelNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.labelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlabelNull() {
                this[this.table_net_rptools_maptool_model_Token.labelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotesNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotesNull() {
                this[this.table_net_rptools_maptool_model_Token.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgmNotesNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.gmNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgmNotesNull() {
                this[this.table_net_rptools_maptool_model_Token.gmNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsspeechMapNull() {
                return this.IsNull(this.table_net_rptools_maptool_model_Token.speechMapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetspeechMapNull() {
                this[this.table_net_rptools_maptool_model_Token.speechMapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idRow[] GetidRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_id"] == null)) {
                    return new idRow[0];
                }
                else {
                    return ((idRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_id"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDRow[] GetexposedAreaGUIDRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_exposedAreaGUID"] == null)) {
                    return new exposedAreaGUIDRow[0];
                }
                else {
                    return ((exposedAreaGUIDRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_exposedAreaGUID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRow[] GetimageAssetMapRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_imageAssetMap"] == null)) {
                    return new imageAssetMapRow[0];
                }
                else {
                    return ((imageAssetMapRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_imageAssetMap"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRow[] GetsizeMapRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_sizeMap"] == null)) {
                    return new sizeMapRow[0];
                }
                else {
                    return ((sizeMapRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_sizeMap"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListRow[] GetownerListRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_ownerList"] == null)) {
                    return new ownerListRow[0];
                }
                else {
                    return ((ownerListRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_ownerList"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageRow[] GetportraitImageRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_portraitImage"] == null)) {
                    return new portraitImageRow[0];
                }
                else {
                    return ((portraitImageRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_portraitImage"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRow[] GetstateRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_state"] == null)) {
                    return new stateRow[0];
                }
                else {
                    return ((stateRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_state"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRow[] GetpropertyMapCIRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_propertyMapCI"] == null)) {
                    return new propertyMapCIRow[0];
                }
                else {
                    return ((propertyMapCIRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_propertyMapCI"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRow[] GetmacroPropertiesMapRows() {
                if ((this.Table.ChildRelations["net.rptools.maptool.model.Token_macroPropertiesMap"] == null)) {
                    return new macroPropertiesMapRow[0];
                }
                else {
                    return ((macroPropertiesMapRow[])(base.GetChildRows(this.Table.ChildRelations["net.rptools.maptool.model.Token_macroPropertiesMap"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class idRow : global::System.Data.DataRow {
            
            private idDataTable tableid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal idRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableid = ((idDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string baGUID {
                get {
                    try {
                        return ((string)(this[this.tableid.baGUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baGUID\' in table \'id\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableid.baGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tableid._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'id\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableid._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbaGUIDNull() {
                return this.IsNull(this.tableid.baGUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbaGUIDNull() {
                this[this.tableid.baGUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tableid._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tableid._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class exposedAreaGUIDRow : global::System.Data.DataRow {
            
            private exposedAreaGUIDDataTable tableexposedAreaGUID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal exposedAreaGUIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexposedAreaGUID = ((exposedAreaGUIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string baGUID {
                get {
                    try {
                        return ((string)(this[this.tableexposedAreaGUID.baGUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baGUID\' in table \'exposedAreaGUID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexposedAreaGUID.baGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tableexposedAreaGUID._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'exposedAreaGU" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexposedAreaGUID._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_exposedAreaGUID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_exposedAreaGUID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbaGUIDNull() {
                return this.IsNull(this.tableexposedAreaGUID.baGUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbaGUIDNull() {
                this[this.tableexposedAreaGUID.baGUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tableexposedAreaGUID._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tableexposedAreaGUID._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class imageAssetMapRow : global::System.Data.DataRow {
            
            private imageAssetMapDataTable tableimageAssetMap;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal imageAssetMapRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableimageAssetMap = ((imageAssetMapDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int imageAssetMap_Id {
                get {
                    return ((int)(this[this.tableimageAssetMap.imageAssetMap_IdColumn]));
                }
                set {
                    this[this.tableimageAssetMap.imageAssetMap_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tableimageAssetMap._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'imageAssetMap" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableimageAssetMap._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_imageAssetMap"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_imageAssetMap"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tableimageAssetMap._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tableimageAssetMap._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow[] GetentryRows() {
                if ((this.Table.ChildRelations["imageAssetMap_entry"] == null)) {
                    return new entryRow[0];
                }
                else {
                    return ((entryRow[])(base.GetChildRows(this.Table.ChildRelations["imageAssetMap_entry"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sizeMapRow : global::System.Data.DataRow {
            
            private sizeMapDataTable tablesizeMap;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sizeMapRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesizeMap = ((sizeMapDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sizeMap_Id {
                get {
                    return ((int)(this[this.tablesizeMap.sizeMap_IdColumn]));
                }
                set {
                    this[this.tablesizeMap.sizeMap_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tablesizeMap._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'sizeMap\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesizeMap._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_sizeMap"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_sizeMap"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tablesizeMap._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tablesizeMap._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow[] GetentryRows() {
                if ((this.Table.ChildRelations["sizeMap_entry"] == null)) {
                    return new entryRow[0];
                }
                else {
                    return ((entryRow[])(base.GetChildRows(this.Table.ChildRelations["sizeMap_entry"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ownerListRow : global::System.Data.DataRow {
            
            private ownerListDataTable tableownerList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ownerListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableownerList = ((ownerListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _string {
                get {
                    try {
                        return ((string)(this[this.tableownerList._stringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'string\' in table \'ownerList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableownerList._stringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tableownerList._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'ownerList\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableownerList._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_ownerList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_ownerList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_stringNull() {
                return this.IsNull(this.tableownerList._stringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_stringNull() {
                this[this.tableownerList._stringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tableownerList._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tableownerList._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class portraitImageRow : global::System.Data.DataRow {
            
            private portraitImageDataTable tableportraitImage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal portraitImageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableportraitImage = ((portraitImageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableportraitImage.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'portraitImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableportraitImage.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tableportraitImage._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'portraitImage" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableportraitImage._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_portraitImage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_portraitImage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidNull() {
                return this.IsNull(this.tableportraitImage.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNull() {
                this[this.tableportraitImage.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tableportraitImage._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tableportraitImage._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class stateRow : global::System.Data.DataRow {
            
            private stateDataTable tablestate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal stateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestate = ((stateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int state_Id {
                get {
                    return ((int)(this[this.tablestate.state_IdColumn]));
                }
                set {
                    this[this.tablestate.state_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tablestate._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'state\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablestate._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_state"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_state"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tablestate._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tablestate._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow[] GetentryRows() {
                if ((this.Table.ChildRelations["state_entry"] == null)) {
                    return new entryRow[0];
                }
                else {
                    return ((entryRow[])(base.GetChildRows(this.Table.ChildRelations["state_entry"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class propertyMapCIRow : global::System.Data.DataRow {
            
            private propertyMapCIDataTable tablepropertyMapCI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal propertyMapCIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepropertyMapCI = ((propertyMapCIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int propertyMapCI_Id {
                get {
                    return ((int)(this[this.tablepropertyMapCI.propertyMapCI_IdColumn]));
                }
                set {
                    this[this.tablepropertyMapCI.propertyMapCI_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tablepropertyMapCI._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'propertyMapCI" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepropertyMapCI._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_propertyMapCI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_propertyMapCI"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tablepropertyMapCI._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tablepropertyMapCI._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRow[] GetstoreRows() {
                if ((this.Table.ChildRelations["propertyMapCI_store"] == null)) {
                    return new storeRow[0];
                }
                else {
                    return ((storeRow[])(base.GetChildRows(this.Table.ChildRelations["propertyMapCI_store"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class storeRow : global::System.Data.DataRow {
            
            private storeDataTable tablestore;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal storeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestore = ((storeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int store_Id {
                get {
                    return ((int)(this[this.tablestore.store_IdColumn]));
                }
                set {
                    this[this.tablestore.store_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int propertyMapCI_Id {
                get {
                    try {
                        return ((int)(this[this.tablestore.propertyMapCI_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'propertyMapCI_Id\' in table \'store\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestore.propertyMapCI_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRow propertyMapCIRow {
                get {
                    return ((propertyMapCIRow)(this.GetParentRow(this.Table.ParentRelations["propertyMapCI_store"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["propertyMapCI_store"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspropertyMapCI_IdNull() {
                return this.IsNull(this.tablestore.propertyMapCI_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpropertyMapCI_IdNull() {
                this[this.tablestore.propertyMapCI_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow[] GetentryRows() {
                if ((this.Table.ChildRelations["store_entry"] == null)) {
                    return new entryRow[0];
                }
                else {
                    return ((entryRow[])(base.GetChildRows(this.Table.ChildRelations["store_entry"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class macroPropertiesMapRow : global::System.Data.DataRow {
            
            private macroPropertiesMapDataTable tablemacroPropertiesMap;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal macroPropertiesMapRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemacroPropertiesMap = ((macroPropertiesMapDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int macroPropertiesMap_Id {
                get {
                    return ((int)(this[this.tablemacroPropertiesMap.macroPropertiesMap_IdColumn]));
                }
                set {
                    this[this.tablemacroPropertiesMap.macroPropertiesMap_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int _net_rptools_maptool_model_Token_Id {
                get {
                    try {
                        return ((int)(this[this.tablemacroPropertiesMap._net_rptools_maptool_model_Token_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net.rptools.maptool.model.Token_Id\' in table \'macroProperti" +
                                "esMap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemacroPropertiesMap._net_rptools_maptool_model_Token_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow _net_rptools_maptool_model_TokenRow {
                get {
                    return ((_net_rptools_maptool_model_TokenRow)(this.GetParentRow(this.Table.ParentRelations["net.rptools.maptool.model.Token_macroPropertiesMap"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["net.rptools.maptool.model.Token_macroPropertiesMap"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_net_rptools_maptool_model_Token_IdNull() {
                return this.IsNull(this.tablemacroPropertiesMap._net_rptools_maptool_model_Token_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_net_rptools_maptool_model_Token_IdNull() {
                this[this.tablemacroPropertiesMap._net_rptools_maptool_model_Token_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow[] GetentryRows() {
                if ((this.Table.ChildRelations["macroPropertiesMap_entry"] == null)) {
                    return new entryRow[0];
                }
                else {
                    return ((entryRow[])(base.GetChildRows(this.Table.ChildRelations["macroPropertiesMap_entry"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class entryRowChangeEvent : global::System.EventArgs {
            
            private entryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRowChangeEvent(entryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public entryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _net_rptools_lib_MD5KeyRowChangeEvent : global::System.EventArgs {
            
            private _net_rptools_lib_MD5KeyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyRowChangeEvent(_net_rptools_lib_MD5KeyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_lib_MD5KeyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _net_rptools_maptool_model_GUIDRowChangeEvent : global::System.EventArgs {
            
            private _net_rptools_maptool_model_GUIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDRowChangeEvent(_net_rptools_maptool_model_GUIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_GUIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent : global::System.EventArgs {
            
            private _net_rptools_CaseInsensitiveHashMap__KeyValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRowChangeEvent(_net_rptools_CaseInsensitiveHashMap__KeyValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_CaseInsensitiveHashMap__KeyValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class valueRowChangeEvent : global::System.EventArgs {
            
            private valueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueRowChangeEvent(valueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public valueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _outer_classRowChangeEvent : global::System.EventArgs {
            
            private _outer_classRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classRowChangeEvent(_outer_classRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _outer_classRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent : global::System.EventArgs {
            
            private _net_rptools_maptool_model_MacroButtonPropertiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesRowChangeEvent(_net_rptools_maptool_model_MacroButtonPropertiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_MacroButtonPropertiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _net_rptools_maptool_model_TokenRowChangeEvent : global::System.EventArgs {
            
            private _net_rptools_maptool_model_TokenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRowChangeEvent(_net_rptools_maptool_model_TokenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _net_rptools_maptool_model_TokenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class idRowChangeEvent : global::System.EventArgs {
            
            private idRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idRowChangeEvent(idRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public idRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class exposedAreaGUIDRowChangeEvent : global::System.EventArgs {
            
            private exposedAreaGUIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDRowChangeEvent(exposedAreaGUIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exposedAreaGUIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class imageAssetMapRowChangeEvent : global::System.EventArgs {
            
            private imageAssetMapRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRowChangeEvent(imageAssetMapRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public imageAssetMapRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class sizeMapRowChangeEvent : global::System.EventArgs {
            
            private sizeMapRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRowChangeEvent(sizeMapRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sizeMapRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ownerListRowChangeEvent : global::System.EventArgs {
            
            private ownerListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListRowChangeEvent(ownerListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ownerListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class portraitImageRowChangeEvent : global::System.EventArgs {
            
            private portraitImageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageRowChangeEvent(portraitImageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public portraitImageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class stateRowChangeEvent : global::System.EventArgs {
            
            private stateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRowChangeEvent(stateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public stateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class propertyMapCIRowChangeEvent : global::System.EventArgs {
            
            private propertyMapCIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRowChangeEvent(propertyMapCIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public propertyMapCIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class storeRowChangeEvent : global::System.EventArgs {
            
            private storeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRowChangeEvent(storeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public storeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class macroPropertiesMapRowChangeEvent : global::System.EventArgs {
            
            private macroPropertiesMapRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRowChangeEvent(macroPropertiesMapRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public macroPropertiesMapRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591